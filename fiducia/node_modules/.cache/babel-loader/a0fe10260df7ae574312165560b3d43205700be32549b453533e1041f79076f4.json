{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakka\\\\OneDrive - Manipal Academy of Higher Education\\\\FIDUCIA\\\\voting-gui\\\\fiducia\\\\src\\\\components\\\\voter\\\\reveal.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { ABI, address } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      winners_length: 0,\n      winners: []\n    };\n\n    // Bind the functions to the current instance of App\n    this.loadBlockchainData = this.loadBlockchainData.bind(this);\n  }\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    try {\n      // Check if Web3 provider is available from Metamask or similar extension\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable(); // Request user permission to connect\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        const scontract = new web3.eth.Contract(ABI, address);\n        await scontract.methods.reveal_winner().send({\n          from: this.state.account\n        });\n        // Get winners length\n        const winners_length = await scontract.methods.get_winners_length().call();\n        this.setState({\n          winners_length\n        });\n\n        // Get winners data\n        const winners = [];\n        for (let i = 0; i < winners_length; i++) {\n          const winnerName = await scontract.methods.get_winners(i).call();\n          winners.push(winnerName);\n        }\n        this.setState({\n          winners\n        });\n      } else {\n        console.log('Please install MetaMask or use a compatible browser extension.');\n      }\n    } catch (error) {\n      console.error('Error loading blockchain data:', error);\n    }\n  }\n  render() {\n    const {\n      account,\n      winners_length,\n      winners\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REVEAL WINNER PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of winners: \", winners_length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: winners.map((winner, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: winner\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Web3","ABI","address","jsxDEV","_jsxDEV","App","constructor","props","state","account","winners_length","winners","loadBlockchainData","bind","componentDidMount","window","ethereum","web3","enable","accounts","eth","getAccounts","setState","scontract","Contract","methods","reveal_winner","send","from","get_winners_length","call","i","winnerName","get_winners","push","console","log","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","winner","index"],"sources":["C:/Users/lakka/OneDrive - Manipal Academy of Higher Education/FIDUCIA/voting-gui/fiducia/src/components/voter/reveal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport { ABI, address } from '../config';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      winners_length: 0,\r\n      winners: [],\r\n    };\r\n\r\n    // Bind the functions to the current instance of App\r\n    this.loadBlockchainData = this.loadBlockchainData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBlockchainData();\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      // Check if Web3 provider is available from Metamask or similar extension\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable(); // Request user permission to connect\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ account: accounts[0] });\r\n        const scontract = new web3.eth.Contract(ABI, address);\r\n        await scontract.methods.reveal_winner().send({from:this.state.account});\r\n        // Get winners length\r\n        const winners_length = await scontract.methods.get_winners_length().call();\r\n        this.setState({ winners_length });\r\n\r\n        // Get winners data\r\n        const winners = [];\r\n        for (let i = 0; i < winners_length; i++) {\r\n          const winnerName = await scontract.methods.get_winners(i).call();\r\n          winners.push(winnerName);\r\n        }\r\n        this.setState({ winners });\r\n      } else {\r\n        console.log('Please install MetaMask or use a compatible browser extension.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading blockchain data:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { account, winners_length, winners } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>REVEAL WINNER PAGE</h1>\r\n        <p>Your account: {account}</p>\r\n        <p>Number of winners: {winners_length}</p>\r\n        <ul>\r\n          {winners.map((winner, index) => (\r\n            <li key={index}>{winner}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}