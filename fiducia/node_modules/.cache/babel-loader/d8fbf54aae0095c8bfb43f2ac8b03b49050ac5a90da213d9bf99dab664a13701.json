{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nimport { Web3Context } from 'web3-core';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\nexport class Net extends Web3Context {\n  /**\r\n   * Gets the current network ID\r\n   *\r\n   * @param returnFormat - Return format\r\n   * @returns A Promise of the network ID.\r\n   * @example\r\n   * ```ts\r\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n   * await net.getId();\r\n   * > 1\r\n   * ```\r\n   */\n  getId() {\n    let returnFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RETURN_FORMAT;\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.getId(this, returnFormat);\n    });\n  }\n  /**\r\n   * Get the number of peers connected to.\r\n   *\r\n   * @param returnFormat - Return format\r\n   * @returns A promise of the number of the peers connected to.\r\n   * @example\r\n   * ```ts\r\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n   * await net.getPeerCount();\r\n   * > 0\r\n   * ```\r\n   */\n  getPeerCount() {\n    let returnFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RETURN_FORMAT;\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.getPeerCount(this, returnFormat);\n    });\n  }\n  /**\r\n   * Check if the node is listening for peers\r\n   *\r\n   * @returns A promise of a boolean if the node is listening to peers\r\n   * @example\r\n   * ```ts\r\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n   * await net.isListening();\r\n   * > true\r\n   * ```\r\n   */\n  isListening() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.isListening(this);\n    });\n  }\n}","map":{"version":3,"names":["Web3Context","DEFAULT_RETURN_FORMAT","rpcMethodsWrappers","Net","getId","returnFormat","arguments","length","undefined","getPeerCount","isListening"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-net\\src\\net.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nimport { Web3Context } from 'web3-core';\r\nimport { DataFormat, DEFAULT_RETURN_FORMAT, Web3NetAPI } from 'web3-types';\r\n\r\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\r\n\r\nexport class Net extends Web3Context<Web3NetAPI> {\r\n\t/**\r\n\t * Gets the current network ID\r\n\t *\r\n\t * @param returnFormat - Return format\r\n\t * @returns A Promise of the network ID.\r\n\t * @example\r\n\t * ```ts\r\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n\t * await net.getId();\r\n\t * > 1\r\n\t * ```\r\n\t */\r\n\tpublic async getId<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\r\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\r\n\t) {\r\n\t\treturn rpcMethodsWrappers.getId(this, returnFormat);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the number of peers connected to.\r\n\t *\r\n\t * @param returnFormat - Return format\r\n\t * @returns A promise of the number of the peers connected to.\r\n\t * @example\r\n\t * ```ts\r\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n\t * await net.getPeerCount();\r\n\t * > 0\r\n\t * ```\r\n\t */\r\n\tpublic async getPeerCount<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\r\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\r\n\t) {\r\n\t\treturn rpcMethodsWrappers.getPeerCount(this, returnFormat);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if the node is listening for peers\r\n\t *\r\n\t * @returns A promise of a boolean if the node is listening to peers\r\n\t * @example\r\n\t * ```ts\r\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n\t * await net.isListening();\r\n\t * > true\r\n\t * ```\r\n\t */\r\n\tpublic async isListening() {\r\n\t\treturn rpcMethodsWrappers.isListening(this);\r\n\t}\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,WAAW,QAAQ,WAAW;AACvC,SAAqBC,qBAAqB,QAAoB,YAAY;AAE1E,OAAO,KAAKC,kBAAkB,MAAM,0BAA0B;AAE9D,OAAM,MAAOC,GAAI,SAAQH,WAAuB;EAC/C;;;;;;;;;;;;EAYaI,KAAKA,CAAA,EACiD;IAAA,IAAlEC,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6BL,qBAAqC;;MAElE,OAAOC,kBAAkB,CAACE,KAAK,CAAC,IAAI,EAAEC,YAAY,CAAC;IACpD,CAAC;;EAED;;;;;;;;;;;;EAYaI,YAAYA,CAAA,EAC0C;IAAA,IAAlEJ,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6BL,qBAAqC;;MAElE,OAAOC,kBAAkB,CAACO,YAAY,CAAC,IAAI,EAAEJ,YAAY,CAAC;IAC3D,CAAC;;EAED;;;;;;;;;;;EAWaK,WAAWA,CAAA;;MACvB,OAAOR,kBAAkB,CAACQ,WAAW,CAAC,IAAI,CAAC;IAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}