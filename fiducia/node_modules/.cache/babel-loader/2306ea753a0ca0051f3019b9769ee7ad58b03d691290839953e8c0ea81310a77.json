{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-types\\src\\json_rpc_types.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nexport type JsonRpcId = string | number | undefined;\r\nexport type JsonRpcResult = string | number | boolean | Record<string, unknown>;\r\nexport type JsonRpcIdentifier = string & ('2.0' | '1.0');\r\n\r\nexport interface JsonRpcError<T = JsonRpcResult> {\r\n\treadonly code: number;\r\n\treadonly message: string;\r\n\treadonly data?: T;\r\n}\r\n\r\nexport interface JsonRpcResponseWithError<Error = JsonRpcResult> {\r\n\treadonly id: JsonRpcId;\r\n\treadonly jsonrpc: JsonRpcIdentifier;\r\n\treadonly error: JsonRpcError<Error>;\r\n\treadonly result?: never;\r\n}\r\n\r\nexport interface JsonRpcResponseWithResult<T = JsonRpcResult> {\r\n\treadonly id: JsonRpcId;\r\n\treadonly jsonrpc: JsonRpcIdentifier;\r\n\treadonly error?: never;\r\n\treadonly result: T;\r\n}\r\n\r\nexport interface SubscriptionParams<T = JsonRpcResult> {\r\n\treadonly subscription: string; // for subscription id\r\n\treadonly result: T;\r\n}\r\n\r\nexport interface JsonRpcSubscriptionResultOld<T = JsonRpcResult> {\r\n\treadonly error?: never;\r\n\treadonly params?: never;\r\n\treadonly type: string;\r\n\treadonly data: SubscriptionParams<T>;\r\n}\r\n\r\nexport interface JsonRpcNotification<T = JsonRpcResult> {\r\n\treadonly id?: JsonRpcId;\r\n\treadonly jsonrpc: JsonRpcIdentifier;\r\n\treadonly method: string; // for subscription\r\n\treadonly params: SubscriptionParams<T>; // for subscription results\r\n\treadonly result: never;\r\n\treadonly data?: never;\r\n}\r\n\r\nexport interface JsonRpcSubscriptionResult {\r\n\treadonly id: number;\r\n\treadonly jsonrpc: string;\r\n\treadonly result: string;\r\n\treadonly method: never;\r\n\treadonly params: never;\r\n\treadonly data?: never;\r\n}\r\n\r\nexport interface JsonRpcRequest<T = unknown[]> {\r\n\treadonly id: JsonRpcId;\r\n\treadonly jsonrpc: JsonRpcIdentifier;\r\n\treadonly method: string;\r\n\treadonly params?: T;\r\n}\r\n\r\nexport interface JsonRpcOptionalRequest<ParamType = unknown[]>\r\n\textends Omit<JsonRpcRequest<ParamType>, 'id' | 'jsonrpc'> {\r\n\treadonly id?: JsonRpcId;\r\n\treadonly jsonrpc?: JsonRpcIdentifier;\r\n}\r\n\r\nexport type JsonRpcBatchRequest = JsonRpcRequest[];\r\n\r\nexport type JsonRpcPayload<Param = unknown[]> = JsonRpcRequest<Param> | JsonRpcBatchRequest;\r\n\r\nexport type JsonRpcBatchResponse<Result = JsonRpcResult, Error = JsonRpcResult> =\r\n\t| (JsonRpcResponseWithError<Error> | JsonRpcResponseWithResult<Result>)[];\r\n\r\nexport type JsonRpcResponse<Result = JsonRpcResult, Error = JsonRpcResult> =\r\n\t| JsonRpcResponseWithError<Error>\r\n\t| JsonRpcResponseWithResult<Result>\r\n\t| JsonRpcBatchResponse<Result, Error>;\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}