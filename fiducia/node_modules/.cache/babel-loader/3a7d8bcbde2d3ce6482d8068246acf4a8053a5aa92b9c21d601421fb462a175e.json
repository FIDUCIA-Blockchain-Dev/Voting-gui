{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakka\\\\OneDrive - Manipal Academy of Higher Education\\\\FIDUCIA\\\\voting-gui\\\\fiducia\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Chairperson from './chairperson.js';\nimport Voter from './voter.js';\nimport { ABI, address } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.setDataArray = newArray => {\n      this.setState({\n        dataArray: newArray\n      });\n    };\n    this.state = {\n      account: '',\n      chairperson: '',\n      status: -1,\n      dataArray: []\n    };\n  }\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    try {\n      // Check if Web3 provider is available from Metamask or similar extension\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable(); // Request user permission to connect\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        const scontract = new web3.eth.Contract(ABI, address);\n        this.setState({\n          scontract\n        }, () => {\n          this.chairperson_or_voter();\n        });\n      } else {\n        console.log('Please install MetaMask or use a compatible browser extension.');\n      }\n    } catch (error) {\n      console.error('Error loading blockchain data:', error);\n    }\n  }\n  async chairperson_or_voter() {\n    const {\n      scontract,\n      account\n    } = this.state;\n    const chair = await scontract.methods.chairperson().call();\n    this.setState({\n      chairperson: chair\n    });\n    if (account == chair) {\n      this.setState({\n        status: 0\n      });\n    } else {\n      this.setState({\n        status: 1\n      });\n    }\n  }\n  render() {\n    const {\n      chairperson,\n      account,\n      status,\n      dataArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [status == 0 && /*#__PURE__*/_jsxDEV(Chairperson, {\n        dataArray: dataArray,\n        setDataArray: this.setDataArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this), status == 1 && /*#__PURE__*/_jsxDEV(Voter, {\n        dataArray: dataArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Web3","Chairperson","Voter","ABI","address","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","setDataArray","newArray","setState","dataArray","state","account","chairperson","status","componentDidMount","loadBlockchainData","window","ethereum","web3","enable","accounts","eth","getAccounts","scontract","Contract","chairperson_or_voter","console","log","error","chair","methods","call","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/lakka/OneDrive - Manipal Academy of Higher Education/FIDUCIA/voting-gui/fiducia/src/components/Main.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport Chairperson from './chairperson.js';\r\nimport Voter from './voter.js';\r\nimport {ABI,address} from './config.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      chairperson:'',\r\n      status:-1,\r\n      dataArray:[],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBlockchainData();\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      // Check if Web3 provider is available from Metamask or similar extension\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable(); // Request user permission to connect\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ account: accounts[0] });\r\n        const scontract = new web3.eth.Contract(ABI,address);\r\n        this.setState({scontract},()=>{\r\n            this.chairperson_or_voter();\r\n        });\r\n      } else {\r\n        console.log('Please install MetaMask or use a compatible browser extension.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading blockchain data:', error);\r\n    }\r\n  }\r\n\r\n  async chairperson_or_voter(){\r\n    const {scontract,account}= this.state;\r\n    const chair = await scontract.methods.chairperson().call();\r\n    this.setState({chairperson:chair});\r\n    if(account==chair)\r\n    {\r\n      this.setState({status:0})\r\n    }\r\n    else\r\n    {\r\n      this.setState({status:1})\r\n    }\r\n  }\r\n  setDataArray = (newArray) => {\r\n    this.setState({\r\n      dataArray: newArray,\r\n    });\r\n  };\r\n  render() {\r\n    const {chairperson,account,status,dataArray} = this.state;\r\n    \r\n    return (\r\n     <>\r\n   \r\n     {status==0 && <Chairperson dataArray={dataArray} setDataArray={this.setDataArray}/>}\r\n     {status==1 && <Voter dataArray={dataArray}/>}\r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}