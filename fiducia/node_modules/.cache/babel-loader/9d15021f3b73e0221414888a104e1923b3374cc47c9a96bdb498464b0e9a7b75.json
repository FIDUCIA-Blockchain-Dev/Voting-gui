{"ast":null,"code":"import { toHex, utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { blake2b } from 'ethereum-cryptography/blake2b.js';\nimport validator from 'is-my-json-valid';\nimport formats from './formats.js';\nimport { Web3ValidatorError } from './errors.js';\nexport class Validator {\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  constructor() {\n    this._schemas = new Map();\n  }\n  static factory() {\n    if (!Validator.validatorInstance) {\n      Validator.validatorInstance = new Validator();\n    }\n    return Validator.validatorInstance;\n  }\n  getSchema(key) {\n    return this._schemas.get(key);\n  }\n  addSchema(key, schema) {\n    this._schemas.set(key, this.createValidator(schema));\n  }\n  // eslint-disable-next-line  class-methods-use-this\n  createValidator(schema) {\n    // eslint-disable-next-line  @typescript-eslint/no-unsafe-call\n    // @ts-expect-error validator params correction\n    return validator(schema, {\n      formats,\n      greedy: true,\n      verbose: true,\n      additionalProperties: false\n    });\n  }\n  validate(schema, data, options) {\n    const localValidate = this.getOrCreateValidator(schema);\n    if (!localValidate(data)) {\n      const errors = this.convertErrors(localValidate.errors, schema, data);\n      if (errors) {\n        if (options === null || options === void 0 ? void 0 : options.silent) {\n          return errors;\n        }\n        throw new Web3ValidatorError(errors);\n      }\n    }\n    return undefined;\n  }\n  convertErrors(errors, schema, data) {\n    if (errors && Array.isArray(errors) && errors.length > 0) {\n      return errors.map(error => {\n        let message;\n        let keyword;\n        let params;\n        let schemaPath;\n        schemaPath = Array.isArray(error.schemaPath) ? error.schemaPath.slice(1).join('/') : '';\n        const {\n          field\n        } = error;\n        const _instancePath = schemaPath || (\n        // eslint-disable-next-line no-useless-escape\n        (field === null || field === void 0 ? void 0 : field.length) >= 4 ? `${field.slice(4).replace(/\\\"|\\[|\\]/g, '')}` : '/');\n        const instancePath = _instancePath ? `/${_instancePath}` : '';\n        if ((error === null || error === void 0 ? void 0 : error.message) === 'has less items than allowed') {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          const schemaData = this.getObjectValueByPath(schema, schemaPath);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          if (schemaData.minItems) {\n            keyword = 'minItems';\n            schemaPath = `${schemaPath}/minItems`;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            params = {\n              limit: schemaData.minItems\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n            message = `must NOT have fewer than ${schemaData.minItems} items`;\n          }\n        } else if ((error === null || error === void 0 ? void 0 : error.message) === 'has more items than allowed') {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          const schemaData = this.getObjectValueByPath(schema, schemaPath);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          if (schemaData.maxItems) {\n            keyword = 'maxItems';\n            schemaPath = `${schemaPath}/maxItems`;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            params = {\n              limit: schemaData.maxItems\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n            message = `must NOT have more than ${schemaData.maxItems} items`;\n          }\n        } else if ((error === null || error === void 0 ? void 0 : error.message.startsWith('must be')) && (error === null || error === void 0 ? void 0 : error.message.endsWith('format'))) {\n          const formatName = error === null || error === void 0 ? void 0 : error.message.split(' ')[2];\n          if (formatName) {\n            message = `must pass \"${formatName}\" validation`;\n          }\n        }\n        // eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment\n        const dataValue = this.getObjectValueByPath(data, instancePath);\n        return {\n          keyword: keyword !== null && keyword !== void 0 ? keyword : error.field,\n          instancePath,\n          schemaPath: `#${schemaPath}`,\n          // eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment\n          params: params !== null && params !== void 0 ? params : {\n            value: dataValue\n          },\n          message: message !== null && message !== void 0 ? message : error.message\n        };\n      });\n    }\n    return undefined;\n  }\n  getOrCreateValidator(schema) {\n    const key = Validator.getKey(schema);\n    let _validator = this.getSchema(key);\n    if (!_validator) {\n      this.addSchema(key, schema);\n      _validator = this.getSchema(key);\n    }\n    return _validator;\n  }\n  static getKey(schema) {\n    return toHex(blake2b(utf8ToBytes(JSON.stringify(schema))));\n  }\n  getObjectValueByPath(obj, pointer, objpath) {\n    try {\n      if (typeof obj !== 'object') throw new Error('Invalid input object');\n      if (typeof pointer !== 'string') throw new Error('Invalid JSON pointer');\n      const parts = pointer.split('/');\n      if (!['', '#'].includes(parts.shift())) {\n        throw new Error('Invalid JSON pointer');\n      }\n      if (parts.length === 0) return obj;\n      let curr = obj;\n      for (const part of parts) {\n        if (typeof part !== 'string') throw new Error('Invalid JSON pointer');\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n        if (objpath) objpath.push(curr); // does not include target itself, but includes head\n        const prop = this.untilde(part);\n        if (typeof curr !== 'object') return undefined;\n        if (!Object.prototype.hasOwnProperty.call(curr, prop)) return undefined;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        curr = curr[prop];\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return curr;\n    } catch (e) {\n      return '';\n    }\n  }\n  // eslint-disable-next-line class-methods-use-this\n  untilde(string) {\n    if (!string.includes('~')) return string;\n    return string.replace(/~[01]/g, match => {\n      switch (match) {\n        case '~1':\n          return '/';\n        case '~0':\n          return '~';\n        default:\n          throw new Error('Unreachable');\n      }\n    });\n  }\n}","map":{"version":3,"names":["toHex","utf8ToBytes","blake2b","validator","formats","Web3ValidatorError","Validator","constructor","_schemas","Map","factory","validatorInstance","getSchema","key","get","addSchema","schema","set","createValidator","greedy","verbose","additionalProperties","validate","data","options","localValidate","getOrCreateValidator","errors","convertErrors","silent","undefined","Array","isArray","length","map","error","message","keyword","params","schemaPath","slice","join","field","_instancePath","replace","instancePath","schemaData","getObjectValueByPath","minItems","limit","maxItems","startsWith","endsWith","formatName","split","dataValue","value","getKey","_validator","JSON","stringify","obj","pointer","objpath","Error","parts","includes","shift","curr","part","push","prop","untilde","Object","prototype","hasOwnProperty","call","e","string","match"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-validator\\src\\validator.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nimport { Web3ValidationErrorObject } from 'web3-types';\r\n\r\nimport { toHex, utf8ToBytes } from 'ethereum-cryptography/utils.js';\r\nimport { blake2b } from 'ethereum-cryptography/blake2b.js';\r\nimport validator from 'is-my-json-valid';\r\nimport formats from './formats.js';\r\nimport { Web3ValidatorError } from './errors.js';\r\nimport { Validate, Json, Schema, RawValidationError } from './types.js';\r\n\r\nexport class Validator {\r\n\t// eslint-disable-next-line no-use-before-define\r\n\tprivate static validatorInstance?: Validator;\r\n\t// eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\r\n\tprivate constructor() {}\r\n\tpublic static factory(): Validator {\r\n\t\tif (!Validator.validatorInstance) {\r\n\t\t\tValidator.validatorInstance = new Validator();\r\n\t\t}\r\n\t\treturn Validator.validatorInstance;\r\n\t}\r\n\tprivate readonly _schemas: Map<string, Validate> = new Map();\r\n\tpublic getSchema(key: string) {\r\n\t\treturn this._schemas.get(key);\r\n\t}\r\n\r\n\tpublic addSchema(key: string, schema: Schema) {\r\n\t\tthis._schemas.set(key, this.createValidator(schema));\r\n\t}\r\n\r\n\t// eslint-disable-next-line  class-methods-use-this\r\n\tprivate createValidator(schema: Schema): Validate {\r\n\t\t// eslint-disable-next-line  @typescript-eslint/no-unsafe-call\r\n\t\t// @ts-expect-error validator params correction\r\n\t\treturn validator(schema, {\r\n\t\t\tformats,\r\n\t\t\tgreedy: true,\r\n\t\t\tverbose: true,\r\n\t\t\tadditionalProperties: false,\r\n\t\t}) as Validate;\r\n\t}\r\n\r\n\tpublic validate(schema: Schema, data: Json, options?: { silent?: boolean }) {\r\n\t\tconst localValidate = this.getOrCreateValidator(schema);\r\n\t\tif (!localValidate(data)) {\r\n\t\t\tconst errors = this.convertErrors(\r\n\t\t\t\tlocalValidate.errors as RawValidationError[],\r\n\t\t\t\tschema,\r\n\t\t\t\tdata,\r\n\t\t\t);\r\n\t\t\tif (errors) {\r\n\t\t\t\tif (options?.silent) {\r\n\t\t\t\t\treturn errors;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Web3ValidatorError(errors);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tprivate convertErrors(\r\n\t\terrors: RawValidationError[] | undefined,\r\n\t\tschema: Schema,\r\n\t\tdata: Json,\r\n\t): Web3ValidationErrorObject[] | undefined {\r\n\t\tif (errors && Array.isArray(errors) && errors.length > 0) {\r\n\t\t\treturn errors.map((error: RawValidationError) => {\r\n\t\t\t\tlet message;\r\n\t\t\t\tlet keyword;\r\n\t\t\t\tlet params;\r\n\t\t\t\tlet schemaPath;\r\n\r\n\t\t\t\tschemaPath = Array.isArray(error.schemaPath)\r\n\t\t\t\t\t? error.schemaPath.slice(1).join('/')\r\n\t\t\t\t\t: '';\r\n\r\n\t\t\t\tconst { field } = error;\r\n\t\t\t\tconst _instancePath =\r\n\t\t\t\t\tschemaPath ||\r\n\t\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t\t(field?.length >= 4 ? `${field.slice(4).replace(/\\\"|\\[|\\]/g, '')}` : '/');\r\n\r\n\t\t\t\tconst instancePath = _instancePath ? `/${_instancePath}` : '';\r\n\t\t\t\tif (error?.message === 'has less items than allowed') {\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n\t\t\t\t\tconst schemaData = this.getObjectValueByPath(schema, schemaPath);\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n\t\t\t\t\tif (schemaData.minItems) {\r\n\t\t\t\t\t\tkeyword = 'minItems';\r\n\t\t\t\t\t\tschemaPath = `${schemaPath}/minItems`;\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\r\n\t\t\t\t\t\tparams = { limit: schemaData.minItems };\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\r\n\t\t\t\t\t\tmessage = `must NOT have fewer than ${schemaData.minItems} items`;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (error?.message === 'has more items than allowed') {\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n\t\t\t\t\tconst schemaData = this.getObjectValueByPath(schema, schemaPath);\r\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n\t\t\t\t\tif (schemaData.maxItems) {\r\n\t\t\t\t\t\tkeyword = 'maxItems';\r\n\t\t\t\t\t\tschemaPath = `${schemaPath}/maxItems`;\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\r\n\t\t\t\t\t\tparams = { limit: schemaData.maxItems };\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\r\n\t\t\t\t\t\tmessage = `must NOT have more than ${schemaData.maxItems} items`;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (\r\n\t\t\t\t\terror?.message.startsWith('must be') &&\r\n\t\t\t\t\terror?.message.endsWith('format')\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst formatName = error?.message.split(' ')[2];\r\n\t\t\t\t\tif (formatName) {\r\n\t\t\t\t\t\tmessage = `must pass \"${formatName}\" validation`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment\r\n\t\t\t\tconst dataValue = this.getObjectValueByPath(data as object, instancePath);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tkeyword: keyword ?? error.field,\r\n\t\t\t\t\tinstancePath,\r\n\t\t\t\t\tschemaPath: `#${schemaPath}`,\r\n\t\t\t\t\t// eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment\r\n\t\t\t\t\tparams: params ?? { value: dataValue },\r\n\t\t\t\t\tmessage: message ?? error.message,\r\n\t\t\t\t} as Web3ValidationErrorObject;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic getOrCreateValidator(schema: Schema): Validate {\r\n\t\tconst key = Validator.getKey(schema);\r\n\t\tlet _validator = this.getSchema(key);\r\n\t\tif (!_validator) {\r\n\t\t\tthis.addSchema(key, schema);\r\n\t\t\t_validator = this.getSchema(key);\r\n\t\t}\r\n\t\treturn _validator!;\r\n\t}\r\n\r\n\tpublic static getKey(schema: Schema) {\r\n\t\treturn toHex(blake2b(utf8ToBytes(JSON.stringify(schema))));\r\n\t}\r\n\tprivate getObjectValueByPath(obj: object, pointer: string, objpath?: object[]) {\r\n\t\ttry {\r\n\t\t\tif (typeof obj !== 'object') throw new Error('Invalid input object');\r\n\t\t\tif (typeof pointer !== 'string') throw new Error('Invalid JSON pointer');\r\n\t\t\tconst parts = pointer.split('/');\r\n\t\t\tif (!['', '#'].includes(parts.shift() as string)) {\r\n\t\t\t\tthrow new Error('Invalid JSON pointer');\r\n\t\t\t}\r\n\t\t\tif (parts.length === 0) return obj;\r\n\r\n\t\t\tlet curr: any = obj;\r\n\t\t\tfor (const part of parts) {\r\n\t\t\t\tif (typeof part !== 'string') throw new Error('Invalid JSON pointer');\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\r\n\t\t\t\tif (objpath) objpath.push(curr); // does not include target itself, but includes head\r\n\t\t\t\tconst prop = this.untilde(part);\r\n\t\t\t\tif (typeof curr !== 'object') return undefined;\r\n\t\t\t\tif (!Object.prototype.hasOwnProperty.call(curr, prop)) return undefined;\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\r\n\t\t\t\tcurr = curr[prop];\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n\t\t\treturn curr;\r\n\t\t} catch (e) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\t// eslint-disable-next-line class-methods-use-this\r\n\tprivate untilde(string: string) {\r\n\t\tif (!string.includes('~')) return string;\r\n\t\treturn string.replace(/~[01]/g, match => {\r\n\t\t\tswitch (match) {\r\n\t\t\t\tcase '~1':\r\n\t\t\t\t\treturn '/';\r\n\t\t\t\tcase '~0':\r\n\t\t\t\t\treturn '~';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Unreachable');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}