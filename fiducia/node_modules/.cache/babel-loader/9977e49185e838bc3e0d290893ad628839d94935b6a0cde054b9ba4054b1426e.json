{"ast":null,"code":"export var BlockTags;\n(function (BlockTags) {\n  BlockTags[\"EARLIEST\"] = \"earliest\";\n  BlockTags[\"LATEST\"] = \"latest\";\n  BlockTags[\"PENDING\"] = \"pending\";\n  BlockTags[\"SAFE\"] = \"safe\";\n  BlockTags[\"FINALIZED\"] = \"finalized\";\n})(BlockTags || (BlockTags = {}));\n// This list of hardforks is expected to be in order\n// keep this in mind when making changes to it\nexport var HardforksOrdered;\n(function (HardforksOrdered) {\n  HardforksOrdered[\"chainstart\"] = \"chainstart\";\n  HardforksOrdered[\"frontier\"] = \"frontier\";\n  HardforksOrdered[\"homestead\"] = \"homestead\";\n  HardforksOrdered[\"dao\"] = \"dao\";\n  HardforksOrdered[\"tangerineWhistle\"] = \"tangerineWhistle\";\n  HardforksOrdered[\"spuriousDragon\"] = \"spuriousDragon\";\n  HardforksOrdered[\"byzantium\"] = \"byzantium\";\n  HardforksOrdered[\"constantinople\"] = \"constantinople\";\n  HardforksOrdered[\"petersburg\"] = \"petersburg\";\n  HardforksOrdered[\"istanbul\"] = \"istanbul\";\n  HardforksOrdered[\"muirGlacier\"] = \"muirGlacier\";\n  HardforksOrdered[\"berlin\"] = \"berlin\";\n  HardforksOrdered[\"london\"] = \"london\";\n  HardforksOrdered[\"altair\"] = \"altair\";\n  HardforksOrdered[\"arrowGlacier\"] = \"arrowGlacier\";\n  HardforksOrdered[\"grayGlacier\"] = \"grayGlacier\";\n  HardforksOrdered[\"bellatrix\"] = \"bellatrix\";\n  HardforksOrdered[\"merge\"] = \"merge\";\n  HardforksOrdered[\"capella\"] = \"capella\";\n  HardforksOrdered[\"shanghai\"] = \"shanghai\";\n})(HardforksOrdered || (HardforksOrdered = {}));","map":{"version":3,"names":["BlockTags","HardforksOrdered"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-types\\src\\eth_types.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nimport { Bytes, HexString, Numbers } from './primitives_types.js';\r\n\r\nexport type ValueTypes = 'address' | 'bool' | 'string' | 'int256' | 'uint256' | 'bytes' | 'bigint';\r\n// Hex encoded 32 bytes\r\nexport type HexString32Bytes = HexString;\r\n// Hex encoded 16 bytes\r\nexport type HexString16Bytes = HexString;\r\n// Hex encoded 8 bytes\r\nexport type HexString8Bytes = HexString;\r\n// Hex encoded 1 byte\r\nexport type HexStringSingleByte = HexString;\r\n// Hex encoded 1 byte\r\nexport type HexStringBytes = HexString;\r\n// Hex encoded 256 byte\r\nexport type HexString256Bytes = HexString;\r\n// Hex encoded unsigned integer\r\nexport type Uint = HexString;\r\n// Hex encoded unsigned integer 32 bytes\r\nexport type Uint256 = HexString;\r\n// Hex encoded address\r\nexport type Address = HexString;\r\n\r\n// https://github.com/ethereum/execution-apis/blob/main/src/schemas/filter.json#L59\r\nexport type Topic = HexString32Bytes;\r\n\r\nexport type TransactionHash = HexString;\r\nexport type Uncles = HexString32Bytes[];\r\nexport enum BlockTags {\r\n\tEARLIEST = 'earliest',\r\n\tLATEST = 'latest',\r\n\tPENDING = 'pending',\r\n\tSAFE = 'safe',\r\n\tFINALIZED = 'finalized',\r\n}\r\nexport type BlockTag = `${BlockTags}`;\r\n\r\nexport type BlockNumberOrTag = Numbers | BlockTag;\r\n\r\nexport interface Proof {\r\n\treadonly address: HexString;\r\n\treadonly nonce: string;\r\n\treadonly balance: string;\r\n}\r\n\r\nexport interface TransactionInput {\r\n\treadonly [key: string]: unknown;\r\n\treadonly to?: HexString; // If its a contract creation tx then no address wil be specified.\r\n\treadonly from?: HexString;\r\n\treadonly data?: string;\r\n\treadonly input?: string;\r\n\treadonly gas: HexString;\r\n\treadonly gasLimit?: string;\r\n\treadonly gasPrice?: string;\r\n\treadonly maxPriorityFeePerGas?: string;\r\n\treadonly maxFeePerGas?: string;\r\n\treadonly nonce: string;\r\n\treadonly value: string;\r\n\treadonly blockNumber?: HexString;\r\n\treadonly transactionIndex?: HexString;\r\n\treadonly type?: HexString;\r\n\treadonly chainId?: HexString;\r\n}\r\n\r\nexport type TransactionOutput = {\r\n\treadonly [key: string]: unknown;\r\n\treadonly to?: HexString; // If its a contract creation tx then no address wil be specified.\r\n\treadonly from?: HexString;\r\n\treadonly input: string;\r\n\treadonly gas?: Numbers;\r\n\treadonly gasLimit?: string;\r\n\treadonly nonce: Numbers;\r\n\treadonly value: Numbers;\r\n\treadonly blockNumber?: Numbers;\r\n\treadonly transactionIndex?: Numbers;\r\n} & (\r\n\t| { maxPriorityFeePerGas: Numbers; maxFeePerGas: Numbers; gasPrice?: never }\r\n\t| { maxPriorityFeePerGas?: never; maxFeePerGas?: never; gasPrice: Numbers }\r\n);\r\n\r\nexport interface LogsInput {\r\n\treadonly blockHash?: HexString;\r\n\treadonly transactionHash?: HexString;\r\n\treadonly logIndex?: HexString;\r\n\treadonly id?: string;\r\n\treadonly blockNumber?: HexString;\r\n\treadonly transactionIndex?: HexString;\r\n\treadonly address: HexString;\r\n\treadonly topics: HexString[];\r\n\treadonly data: HexString;\r\n}\r\nexport interface LogsOutput {\r\n\treadonly id?: string;\r\n\treadonly removed: boolean;\r\n\treadonly logIndex?: Numbers;\r\n\treadonly transactionIndex?: Numbers;\r\n\treadonly transactionHash?: HexString32Bytes;\r\n\treadonly blockHash?: HexString32Bytes;\r\n\treadonly blockNumber?: Numbers;\r\n\treadonly address: string;\r\n\treadonly topics: HexString[];\r\n\treadonly data: HexString;\r\n}\r\n\r\nexport interface BlockInput {\r\n\treadonly gasLimit: HexString;\r\n\treadonly gasUsed: HexString;\r\n\treadonly size: HexString;\r\n\treadonly timestamp: HexString;\r\n\treadonly number?: HexString;\r\n\treadonly difficulty?: HexString;\r\n\treadonly totalDifficulty?: HexString;\r\n\treadonly transactions?: TransactionInput[];\r\n\treadonly miner?: HexString;\r\n\treadonly baseFeePerGas?: HexString;\r\n}\r\n\r\nexport interface BlockOutput {\r\n\treadonly gasLimit: bigint | number;\r\n\treadonly gasUsed: bigint | number;\r\n\treadonly size: bigint | number;\r\n\treadonly timestamp: bigint | number;\r\n\treadonly number?: bigint | number;\r\n\treadonly difficulty?: bigint | number;\r\n\treadonly totalDifficulty?: bigint | number;\r\n\treadonly transactions?: TransactionOutput[];\r\n\treadonly miner?: HexString;\r\n\treadonly baseFeePerGas?: bigint | number;\r\n\treadonly parentHash?: HexString32Bytes;\r\n}\r\n\r\nexport interface BlockHeaderOutput {\r\n\treadonly gasLimit: Numbers;\r\n\treadonly gasUsed: Numbers;\r\n\treadonly timestamp: Numbers;\r\n\treadonly number?: Numbers;\r\n\treadonly difficulty?: Numbers;\r\n\treadonly totalDifficulty?: Numbers;\r\n\treadonly transactions?: TransactionOutput[];\r\n\treadonly miner?: HexString;\r\n\treadonly baseFeePerGas?: Numbers;\r\n\treadonly parentHash?: HexString32Bytes;\r\n\treadonly sha3Uncles: HexString32Bytes[];\r\n}\r\n\r\nexport interface ReceiptInput {\r\n\treadonly [x: string]: unknown;\r\n\treadonly blockNumber?: HexString;\r\n\treadonly transactionIndex?: HexString;\r\n\treadonly cumulativeGasUsed: HexString;\r\n\treadonly gasUsed: HexString;\r\n\treadonly logs?: LogsInput[];\r\n\treadonly contractAddress?: HexString;\r\n\treadonly status?: string;\r\n\treadonly effectiveGasPrice?: HexString;\r\n}\r\n\r\nexport interface ReceiptOutput {\r\n\treadonly blockNumber?: bigint | number;\r\n\treadonly transactionIndex?: bigint | number;\r\n\treadonly cumulativeGasUsed: bigint | number;\r\n\treadonly gasUsed: bigint | number;\r\n\treadonly logs?: LogsOutput[];\r\n\treadonly contractAddress?: HexString;\r\n\treadonly status: boolean;\r\n\treadonly effectiveGasPrice?: bigint | number;\r\n}\r\n\r\nexport interface PostInput {\r\n\treadonly ttl?: HexString;\r\n\treadonly workToProve?: HexString;\r\n\treadonly priority?: HexString;\r\n\treadonly expiry?: HexString;\r\n\treadonly sent?: HexString;\r\n\treadonly workProved?: HexString;\r\n\treadonly topics?: HexString[];\r\n}\r\n\r\nexport interface PostOutput {\r\n\treadonly ttl?: bigint | number;\r\n\treadonly workToProve?: bigint | number;\r\n\treadonly priority?: bigint | number;\r\n\treadonly expiry?: bigint | number;\r\n\treadonly sent?: bigint | number;\r\n\treadonly workProved?: bigint | number;\r\n\treadonly topics?: string[];\r\n}\r\n\r\nexport interface SyncInput {\r\n\treadonly startingBlock: HexString;\r\n\treadonly currentBlock: HexString;\r\n\treadonly highestBlock: HexString;\r\n\treadonly knownStates?: HexString;\r\n\treadonly pulledStates?: HexString;\r\n}\r\n\r\nexport interface SyncOutput {\r\n\treadonly startingBlock: Numbers;\r\n\treadonly currentBlock: Numbers;\r\n\treadonly highestBlock: Numbers;\r\n\treadonly knownStates?: Numbers;\r\n\treadonly pulledStates?: Numbers;\r\n}\r\n\r\nexport type Receipt = Record<string, unknown>;\r\n\r\ntype FilterOption = Record<string, Numbers | Numbers[] | boolean | boolean[]>;\r\n\r\n// https://github.com/ethereum/execution-apis/blob/main/src/schemas/filter.json#L28\r\nexport interface Filter {\r\n\treadonly fromBlock?: BlockNumberOrTag;\r\n\treadonly toBlock?: BlockNumberOrTag;\r\n\treadonly address?: Address | Address[];\r\n\r\n\t// Using \"null\" type intentionally to match specifications\r\n\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\treadonly topics?: (null | Topic | Topic[])[];\r\n\treadonly filter?: FilterOption;\r\n}\r\n\r\nexport interface AccessListEntry {\r\n\treadonly address?: Address;\r\n\treadonly storageKeys?: HexString32Bytes[];\r\n}\r\nexport type AccessList = AccessListEntry[];\r\n\r\nexport type AccessListResult = {\r\n\treadonly accessList?: AccessList;\r\n\treadonly gasUsed?: Numbers;\r\n};\r\n\r\nexport type ValidChains = 'goerli' | 'kovan' | 'mainnet' | 'rinkeby' | 'ropsten' | 'sepolia';\r\n\r\n// This list of hardforks is expected to be in order\r\n// keep this in mind when making changes to it\r\nexport enum HardforksOrdered {\r\n\tchainstart = 'chainstart',\r\n\tfrontier = 'frontier',\r\n\thomestead = 'homestead',\r\n\tdao = 'dao',\r\n\ttangerineWhistle = 'tangerineWhistle',\r\n\tspuriousDragon = 'spuriousDragon',\r\n\tbyzantium = 'byzantium',\r\n\tconstantinople = 'constantinople',\r\n\tpetersburg = 'petersburg',\r\n\tistanbul = 'istanbul',\r\n\tmuirGlacier = 'muirGlacier',\r\n\tberlin = 'berlin',\r\n\tlondon = 'london',\r\n\taltair = 'altair',\r\n\tarrowGlacier = 'arrowGlacier',\r\n\tgrayGlacier = 'grayGlacier',\r\n\tbellatrix = 'bellatrix',\r\n\tmerge = 'merge',\r\n\tcapella = 'capella',\r\n\tshanghai = 'shanghai',\r\n}\r\n\r\nexport type Hardfork = `${HardforksOrdered}`;\r\n\r\nexport interface LogBase<NumberType, ByteType> {\r\n\treadonly removed?: boolean;\r\n\treadonly logIndex?: NumberType;\r\n\treadonly transactionIndex?: NumberType;\r\n\treadonly transactionHash?: ByteType;\r\n\treadonly blockHash?: ByteType;\r\n\treadonly blockNumber?: NumberType;\r\n\treadonly address?: Address;\r\n\treadonly data?: ByteType;\r\n\treadonly topics?: ByteType[];\r\n\treadonly id?: string;\r\n}\r\nexport interface Log extends LogBase<Numbers, Bytes> {\r\n\treadonly id?: string;\r\n}\r\nexport interface TransactionReceiptBase<numberType, hashByteType, logsBloomByteType, logsType> {\r\n\treadonly transactionHash: hashByteType;\r\n\treadonly transactionIndex: numberType;\r\n\treadonly blockHash: hashByteType;\r\n\treadonly blockNumber: numberType;\r\n\treadonly from: Address;\r\n\treadonly to: Address;\r\n\treadonly cumulativeGasUsed: numberType;\r\n\treadonly gasUsed: numberType;\r\n\treadonly effectiveGasPrice?: numberType;\r\n\treadonly contractAddress?: Address;\r\n\treadonly logs: logsType[];\r\n\treadonly logsBloom: logsBloomByteType;\r\n\treadonly root: hashByteType;\r\n\treadonly status: numberType;\r\n\treadonly type?: numberType;\r\n}\r\n\r\nexport type TransactionReceipt = TransactionReceiptBase<Numbers, Bytes, Bytes, Log>;\r\n\r\nexport interface CustomChain {\r\n\tname?: string;\r\n\tnetworkId: Numbers;\r\n\tchainId: Numbers;\r\n}\r\n\r\nexport interface Common {\r\n\tcustomChain: CustomChain;\r\n\tbaseChain?: ValidChains;\r\n\thardfork?: Hardfork;\r\n}\r\n\r\ninterface TransactionBase {\r\n\tvalue?: Numbers;\r\n\taccessList?: AccessList;\r\n\tcommon?: Common;\r\n\tgas?: Numbers;\r\n\tgasPrice?: Numbers;\r\n\ttype?: Numbers;\r\n\tmaxFeePerGas?: Numbers;\r\n\tmaxPriorityFeePerGas?: Numbers;\r\n\tdata?: Bytes;\r\n\tinput?: Bytes;\r\n\tnonce?: Numbers;\r\n\tchain?: ValidChains;\r\n\thardfork?: Hardfork;\r\n\tchainId?: Numbers;\r\n\tnetworkId?: Numbers;\r\n\tgasLimit?: Numbers;\r\n\tyParity?: Uint;\r\n\tv?: Numbers;\r\n\tr?: Bytes;\r\n\ts?: Bytes;\r\n}\r\n\r\nexport interface Transaction extends TransactionBase {\r\n\tfrom?: Address;\r\n\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\tto?: Address | null;\r\n}\r\n\r\nexport interface TransactionForAccessList extends Transaction {\r\n\tfrom: Address;\r\n}\r\n\r\nexport interface TransactionCall extends Transaction {\r\n\tto: Address;\r\n}\r\n\r\nexport interface TransactionWithFromLocalWalletIndex extends Omit<Transaction, 'from'> {\r\n\tfrom: Numbers;\r\n}\r\n\r\nexport interface TransactionWithToLocalWalletIndex extends Omit<Transaction, 'to'> {\r\n\tto: Numbers;\r\n}\r\n\r\nexport interface TransactionWithFromAndToLocalWalletIndex extends Omit<Transaction, 'from' | 'to'> {\r\n\tfrom: Numbers;\r\n\tto: Numbers;\r\n}\r\n\r\nexport interface TransactionInfo extends Transaction {\r\n\treadonly blockHash?: Bytes;\r\n\treadonly blockNumber?: Numbers;\r\n\treadonly from: Address;\r\n\treadonly hash: Bytes;\r\n\treadonly transactionIndex?: Numbers;\r\n}\r\n\r\nexport interface PopulatedUnsignedBaseTransaction {\r\n\tfrom: Address;\r\n\tto?: Address;\r\n\tvalue: Numbers;\r\n\tgas?: Numbers;\r\n\tgasPrice: Numbers;\r\n\ttype: Numbers;\r\n\tinput: Bytes;\r\n\tnonce: Numbers;\r\n\tnetworkId: Numbers;\r\n\tchain: ValidChains;\r\n\thardfork: Hardfork;\r\n\tchainId: Numbers;\r\n\tcommon: Common;\r\n\tgasLimit: Numbers;\r\n}\r\n\r\nexport interface PopulatedUnsignedEip2930Transaction extends PopulatedUnsignedBaseTransaction {\r\n\taccessList: AccessList;\r\n}\r\n\r\nexport interface PopulatedUnsignedEip1559Transaction extends PopulatedUnsignedEip2930Transaction {\r\n\tgasPrice: never;\r\n\tmaxFeePerGas: Numbers;\r\n\tmaxPriorityFeePerGas: Numbers;\r\n}\r\nexport type PopulatedUnsignedTransaction =\r\n\t| PopulatedUnsignedBaseTransaction\r\n\t| PopulatedUnsignedEip2930Transaction\r\n\t| PopulatedUnsignedEip1559Transaction;\r\n\r\nexport interface BlockBase<\r\n\tByteType,\r\n\tHexStringType,\r\n\tNumberType,\r\n\textraDataType,\r\n\tTransactionTypes,\r\n\tlogsBloomType,\r\n> {\r\n\treadonly parentHash: ByteType;\r\n\treadonly sha3Uncles: ByteType;\r\n\treadonly miner: HexStringType;\r\n\treadonly stateRoot: ByteType;\r\n\treadonly transactionsRoot: ByteType;\r\n\treadonly receiptsRoot: ByteType;\r\n\treadonly logsBloom?: logsBloomType;\r\n\treadonly difficulty?: NumberType;\r\n\treadonly number: NumberType;\r\n\treadonly gasLimit: NumberType;\r\n\treadonly gasUsed: NumberType;\r\n\treadonly timestamp: NumberType;\r\n\treadonly extraData: extraDataType;\r\n\treadonly mixHash: ByteType;\r\n\treadonly nonce: NumberType;\r\n\treadonly totalDifficulty: NumberType;\r\n\treadonly baseFeePerGas?: NumberType;\r\n\treadonly size: NumberType;\r\n\treadonly transactions: TransactionTypes;\r\n\treadonly uncles: Uncles;\r\n\treadonly hash?: ByteType;\r\n}\r\n\r\nexport type Block = BlockBase<\r\n\tBytes,\r\n\tBytes,\r\n\tNumbers,\r\n\tBytes,\r\n\tTransactionHash[] | TransactionInfo[],\r\n\tBytes\r\n>;\r\n\r\nexport interface FeeHistoryBase<NumberType> {\r\n\treadonly oldestBlock: NumberType;\r\n\treadonly baseFeePerGas: NumberType;\r\n\treadonly reward: NumberType[][];\r\n\treadonly gasUsedRatio: NumberType[];\r\n}\r\n\r\nexport type FeeHistory = FeeHistoryBase<Numbers>;\r\n\r\nexport interface StorageProof {\r\n\treadonly key: Bytes;\r\n\treadonly value: Numbers;\r\n\treadonly proof: Bytes[];\r\n}\r\n\r\nexport interface AccountObject {\r\n\treadonly balance: Numbers;\r\n\treadonly codeHash: Bytes;\r\n\treadonly nonce: Numbers;\r\n\treadonly storageHash: Bytes;\r\n\treadonly accountProof: Bytes[];\r\n\treadonly storageProof: StorageProof[];\r\n}\r\n"],"mappings":"AA2CA,WAAYA,SAMX;AAND,WAAYA,SAAS;EACpBA,SAAA,yBAAqB;EACrBA,SAAA,qBAAiB;EACjBA,SAAA,uBAAmB;EACnBA,SAAA,iBAAa;EACbA,SAAA,2BAAuB;AACxB,CAAC,EANWA,SAAS,KAATA,SAAS;AA6MrB;AACA;AACA,WAAYC,gBAqBX;AArBD,WAAYA,gBAAgB;EAC3BA,gBAAA,6BAAyB;EACzBA,gBAAA,yBAAqB;EACrBA,gBAAA,2BAAuB;EACvBA,gBAAA,eAAW;EACXA,gBAAA,yCAAqC;EACrCA,gBAAA,qCAAiC;EACjCA,gBAAA,2BAAuB;EACvBA,gBAAA,qCAAiC;EACjCA,gBAAA,6BAAyB;EACzBA,gBAAA,yBAAqB;EACrBA,gBAAA,+BAA2B;EAC3BA,gBAAA,qBAAiB;EACjBA,gBAAA,qBAAiB;EACjBA,gBAAA,qBAAiB;EACjBA,gBAAA,iCAA6B;EAC7BA,gBAAA,+BAA2B;EAC3BA,gBAAA,2BAAuB;EACvBA,gBAAA,mBAAe;EACfA,gBAAA,uBAAmB;EACnBA,gBAAA,yBAAqB;AACtB,CAAC,EArBWA,gBAAgB,KAAhBA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}