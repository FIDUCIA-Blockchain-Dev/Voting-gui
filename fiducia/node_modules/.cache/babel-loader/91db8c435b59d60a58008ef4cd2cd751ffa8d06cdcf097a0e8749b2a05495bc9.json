{"ast":null,"code":"import { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Web3ValidatorError } from './errors.js';\nexport class Web3Validator {\n  constructor() {\n    this._validator = Validator.factory();\n  }\n  validateJSONSchema(schema, data, options) {\n    return this._validator.validate(schema, data, options);\n  }\n  validate(schema, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      silent: false\n    };\n    var _a, _b;\n    const jsonSchema = ethAbiToJsonSchema(schema);\n    if (Array.isArray(jsonSchema.items) && ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 && data.length === 0) {\n      return undefined;\n    }\n    if (Array.isArray(jsonSchema.items) && ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 && data.length !== 0) {\n      throw new Web3ValidatorError([{\n        instancePath: '/0',\n        schemaPath: '/',\n        keyword: 'required',\n        message: 'empty schema against data can not be validated',\n        params: data\n      }]);\n    }\n    return this._validator.validate(jsonSchema, data, options);\n  }\n}","map":{"version":3,"names":["Validator","ethAbiToJsonSchema","Web3ValidatorError","Web3Validator","constructor","_validator","factory","validateJSONSchema","schema","data","options","validate","arguments","length","undefined","silent","jsonSchema","Array","isArray","items","_a","_b","instancePath","schemaPath","keyword","message","params"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-validator\\src\\web3_validator.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\nimport { Web3ValidationErrorObject } from 'web3-types';\r\n\r\nimport { Validator } from './validator.js';\r\nimport { ethAbiToJsonSchema } from './utils.js';\r\nimport { Json, ValidationSchemaInput, Web3ValidationOptions } from './types.js';\r\nimport { Web3ValidatorError } from './errors.js';\r\n\r\nexport class Web3Validator {\r\n\tprivate readonly _validator: Validator;\r\n\r\n\tpublic constructor() {\r\n\t\tthis._validator = Validator.factory();\r\n\t}\r\n\r\n\tpublic validateJSONSchema(\r\n\t\tschema: object,\r\n\t\tdata: object,\r\n\t\toptions?: Web3ValidationOptions,\r\n\t): Web3ValidationErrorObject[] | undefined {\r\n\t\treturn this._validator.validate(schema, data as Json, options);\r\n\t}\r\n\r\n\tpublic validate(\r\n\t\tschema: ValidationSchemaInput,\r\n\t\tdata: ReadonlyArray<unknown>,\r\n\t\toptions: Web3ValidationOptions = { silent: false },\r\n\t): Web3ValidationErrorObject[] | undefined {\r\n\t\tconst jsonSchema = ethAbiToJsonSchema(schema);\r\n\t\tif (\r\n\t\t\tArray.isArray(jsonSchema.items) &&\r\n\t\t\tjsonSchema.items?.length === 0 &&\r\n\t\t\tdata.length === 0\r\n\t\t) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tArray.isArray(jsonSchema.items) &&\r\n\t\t\tjsonSchema.items?.length === 0 &&\r\n\t\t\tdata.length !== 0\r\n\t\t) {\r\n\t\t\tthrow new Web3ValidatorError([\r\n\t\t\t\t{\r\n\t\t\t\t\tinstancePath: '/0',\r\n\t\t\t\t\tschemaPath: '/',\r\n\t\t\t\t\tkeyword: 'required',\r\n\t\t\t\t\tmessage: 'empty schema against data can not be validated',\r\n\t\t\t\t\tparams: data,\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\treturn this._validator.validate(jsonSchema, data as Json, options);\r\n\t}\r\n}\r\n"],"mappings":"AAkBA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,kBAAkB,QAAQ,YAAY;AAE/C,SAASC,kBAAkB,QAAQ,aAAa;AAEhD,OAAM,MAAOC,aAAa;EAGzBC,YAAA;IACC,IAAI,CAACC,UAAU,GAAGL,SAAS,CAACM,OAAO,EAAE;EACtC;EAEOC,kBAAkBA,CACxBC,MAAc,EACdC,IAAY,EACZC,OAA+B;IAE/B,OAAO,IAAI,CAACL,UAAU,CAACM,QAAQ,CAACH,MAAM,EAAEC,IAAY,EAAEC,OAAO,CAAC;EAC/D;EAEOC,QAAQA,CACdH,MAA6B,EAC7BC,IAA4B,EACsB;IAAA,IAAlDC,OAAA,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiC;MAAEG,MAAM,EAAE;IAAK,CAAE;;IAElD,MAAMC,UAAU,GAAGf,kBAAkB,CAACO,MAAM,CAAC;IAC7C,IACCS,KAAK,CAACC,OAAO,CAACF,UAAU,CAACG,KAAK,CAAC,IAC/B,EAAAC,EAAA,GAAAJ,UAAU,CAACG,KAAK,cAAAC,EAAA,uBAAAA,EAAA,CAAEP,MAAM,MAAK,CAAC,IAC9BJ,IAAI,CAACI,MAAM,KAAK,CAAC,EAChB;MACD,OAAOC,SAAS;;IAGjB,IACCG,KAAK,CAACC,OAAO,CAACF,UAAU,CAACG,KAAK,CAAC,IAC/B,EAAAE,EAAA,GAAAL,UAAU,CAACG,KAAK,cAAAE,EAAA,uBAAAA,EAAA,CAAER,MAAM,MAAK,CAAC,IAC9BJ,IAAI,CAACI,MAAM,KAAK,CAAC,EAChB;MACD,MAAM,IAAIX,kBAAkB,CAAC,CAC5B;QACCoB,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,GAAG;QACfC,OAAO,EAAE,UAAU;QACnBC,OAAO,EAAE,gDAAgD;QACzDC,MAAM,EAAEjB;OACR,CACD,CAAC;;IAGH,OAAO,IAAI,CAACJ,UAAU,CAACM,QAAQ,CAACK,UAAU,EAAEP,IAAY,EAAEC,OAAO,CAAC;EACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}