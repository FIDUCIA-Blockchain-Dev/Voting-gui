{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nimport { BaseWeb3Error, ERR_VALIDATION } from 'web3-errors';\nimport { isNullish } from './validation/object.js';\nconst errorFormatter = error => {\n  if (error.message && error.instancePath && error.params && !isNullish(error.params.value)) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `value \"${error.params.value}\" at \"${error.instancePath}\" ${error.message}`;\n  }\n  if (error.message && error.instancePath) {\n    return `value at \"${error.instancePath}\" ${error.message}`;\n  }\n  if (error.instancePath) {\n    return `value at \"${error.instancePath}\" caused unspecified error`;\n  }\n  if (error.message) {\n    return error.message;\n  }\n  return 'unspecified error';\n};\nexport class Web3ValidatorError extends BaseWeb3Error {\n  constructor(errors) {\n    super();\n    this.code = ERR_VALIDATION;\n    this.errors = errors;\n    super.message = `Web3 validator found ${errors.length} error[s]:\\n${this._compileErrors().join('\\n')}`;\n  }\n  _compileErrors() {\n    const errorMsgs = this.errors.map(errorFormatter);\n    return errorMsgs;\n  }\n}","map":{"version":3,"names":["BaseWeb3Error","ERR_VALIDATION","isNullish","errorFormatter","error","message","instancePath","params","value","Web3ValidatorError","constructor","errors","code","length","_compileErrors","join","errorMsgs","map"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-validator\\src\\errors.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { BaseWeb3Error, ERR_VALIDATION } from 'web3-errors';\r\nimport { Web3ValidationErrorObject } from 'web3-types';\r\n\r\nimport { isNullish } from './validation/object.js';\r\n\r\nconst errorFormatter = (error: Web3ValidationErrorObject): string => {\r\n\tif (error.message && error.instancePath && error.params && !isNullish(error.params.value)) {\r\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n\t\treturn `value \"${(error.params as { value: unknown }).value}\" at \"${error.instancePath}\" ${\r\n\t\t\terror.message\r\n\t\t}`;\r\n\t}\r\n\r\n\tif (error.message && error.instancePath) {\r\n\t\treturn `value at \"${error.instancePath}\" ${error.message}`;\r\n\t}\r\n\r\n\tif (error.instancePath) {\r\n\t\treturn `value at \"${error.instancePath}\" caused unspecified error`;\r\n\t}\r\n\r\n\tif (error.message) {\r\n\t\treturn error.message;\r\n\t}\r\n\r\n\treturn 'unspecified error';\r\n};\r\n\r\nexport class Web3ValidatorError extends BaseWeb3Error {\r\n\tpublic code = ERR_VALIDATION;\r\n\tpublic readonly errors: Web3ValidationErrorObject[];\r\n\r\n\tpublic constructor(errors: Web3ValidationErrorObject[]) {\r\n\t\tsuper();\r\n\r\n\t\tthis.errors = errors;\r\n\r\n\t\tsuper.message = `Web3 validator found ${\r\n\t\t\terrors.length\r\n\t\t} error[s]:\\n${this._compileErrors().join('\\n')}`;\r\n\t}\r\n\r\n\tprivate _compileErrors(): string[] {\r\n\t\tconst errorMsgs = this.errors.map(errorFormatter);\r\n\t\treturn errorMsgs;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAASA,aAAa,EAAEC,cAAc,QAAQ,aAAa;AAG3D,SAASC,SAAS,QAAQ,wBAAwB;AAElD,MAAMC,cAAc,GAAIC,KAAgC,IAAY;EACnE,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,YAAY,IAAIF,KAAK,CAACG,MAAM,IAAI,CAACL,SAAS,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,EAAE;IAC1F;IACA,OAAO,UAAWJ,KAAK,CAACG,MAA6B,CAACC,KAAK,SAASJ,KAAK,CAACE,YAAY,KACrFF,KAAK,CAACC,OACP,EAAE;;EAGH,IAAID,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,YAAY,EAAE;IACxC,OAAO,aAAaF,KAAK,CAACE,YAAY,KAAKF,KAAK,CAACC,OAAO,EAAE;;EAG3D,IAAID,KAAK,CAACE,YAAY,EAAE;IACvB,OAAO,aAAaF,KAAK,CAACE,YAAY,4BAA4B;;EAGnE,IAAIF,KAAK,CAACC,OAAO,EAAE;IAClB,OAAOD,KAAK,CAACC,OAAO;;EAGrB,OAAO,mBAAmB;AAC3B,CAAC;AAED,OAAM,MAAOI,kBAAmB,SAAQT,aAAa;EAIpDU,YAAmBC,MAAmC;IACrD,KAAK,EAAE;IAJD,KAAAC,IAAI,GAAGX,cAAc;IAM3B,IAAI,CAACU,MAAM,GAAGA,MAAM;IAEpB,KAAK,CAACN,OAAO,GAAG,wBACfM,MAAM,CAACE,MACR,eAAe,IAAI,CAACC,cAAc,EAAE,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;EAClD;EAEQD,cAAcA,CAAA;IACrB,MAAME,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,GAAG,CAACd,cAAc,CAAC;IACjD,OAAOa,SAAS;EACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}