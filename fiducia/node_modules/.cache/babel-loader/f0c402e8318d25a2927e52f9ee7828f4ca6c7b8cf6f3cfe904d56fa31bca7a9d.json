{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nexport {};","map":{"version":3,"names":[],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-types\\src\\utility_types.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { Numbers } from './primitives_types.js';\r\n\r\n// Make each attribute mutable by removing `readonly`\r\nexport type Mutable<T> = {\r\n\t-readonly [P in keyof T]: T[P];\r\n};\r\n\r\nexport type ConnectionEvent = {\r\n\tcode: number;\r\n\treason: string;\r\n\twasClean?: boolean; // if WS connection was closed properly\r\n};\r\n\r\nexport type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\r\nexport type EncodingTypes = Numbers | boolean | Numbers[] | boolean[];\r\n\r\nexport type TypedObject = {\r\n\ttype: string;\r\n\tvalue: EncodingTypes;\r\n};\r\n\r\nexport type TypedObjectAbbreviated = {\r\n\tt: string;\r\n\tv: EncodingTypes;\r\n};\r\n\r\nexport type Sha3Input = TypedObject | TypedObjectAbbreviated | Numbers | boolean | object;\r\n\r\nexport type IndexKeysForArray<A extends readonly unknown[]> = Exclude<keyof A, keyof []>;\r\n\r\nexport type ArrayToIndexObject<T extends ReadonlyArray<unknown>> = {\r\n\t[K in IndexKeysForArray<T>]: T[K];\r\n};\r\n\r\ntype _Grow<T, A extends Array<T>> = ((x: T, ...xs: A) => void) extends (...a: infer X) => void\r\n\t? X\r\n\t: never;\r\n\r\nexport type GrowToSize<T, A extends Array<T>, N extends number> = {\r\n\t0: A;\r\n\t1: GrowToSize<T, _Grow<T, A>, N>;\r\n}[A['length'] extends N ? 0 : 1];\r\n\r\nexport type FixedSizeArray<T, N extends number> = GrowToSize<T, [], N>;\r\n"],"mappings":"AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}