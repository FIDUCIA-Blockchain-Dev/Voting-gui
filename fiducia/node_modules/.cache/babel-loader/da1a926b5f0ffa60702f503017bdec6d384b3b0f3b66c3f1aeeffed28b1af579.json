{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakka\\\\OneDrive - Manipal Academy of Higher Education\\\\FIDUCIA\\\\voting-gui\\\\fiducia\\\\src\\\\components\\\\voter\\\\vote.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      names_array: []\n    };\n  }\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.get_names();\n  }\n  async get_names() {\n    const {\n      scontract\n    } = this.state;\n    const length = await scontract.methods.candidatescount().call();\n    const namesArray = [];\n    for (let i = 0; i < length; i++) {\n      const element = await scontract.methods.get_names(i).call();\n      namesArray.push(element);\n    }\n    this.setState({\n      names_array: namesArray\n    });\n    console.log(this.state.names_array);\n  }\n  async loadBlockchainData() {\n    try {\n      // Check if Web3 provider is available from Metamask or similar extension\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable(); // Request user permission to connect\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        const scontract = new web3.eth.Contract(ABI, address);\n        this.setState({\n          scontract\n        });\n      } else {\n        console.log('Please install MetaMask or use a compatible browser extension.');\n      }\n    } catch (error) {\n      console.error('Error loading blockchain data:', error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"VOTE PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Web3","jsxDEV","_jsxDEV","App","constructor","props","state","account","names_array","componentDidMount","loadBlockchainData","get_names","scontract","length","methods","candidatescount","call","namesArray","i","element","push","setState","console","log","window","ethereum","web3","enable","accounts","eth","getAccounts","Contract","ABI","address","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/lakka/OneDrive - Manipal Academy of Higher Education/FIDUCIA/voting-gui/fiducia/src/components/voter/vote.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      names_array:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBlockchainData();\r\n    this.get_names();\r\n    \r\n  }\r\n  async get_names() {\r\n    const {scontract} = this.state;\r\n    const length = await scontract.methods.candidatescount().call();\r\n    const namesArray = []\r\n    for(let i=0;i<length;i++)\r\n    {\r\n      const element = await scontract.methods.get_names(i).call();\r\n      namesArray.push(element);\r\n\r\n    }\r\n    this.setState({names_array:namesArray})\r\n    console.log(this.state.names_array)\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    try {\r\n      // Check if Web3 provider is available from Metamask or similar extension\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        await window.ethereum.enable(); // Request user permission to connect\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ account: accounts[0] });\r\n        const scontract = new web3.eth.Contract(ABI, address)\r\n        this.setState({ scontract })\r\n      } else {\r\n        console.log('Please install MetaMask or use a compatible browser extension.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading blockchain data:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <h1>VOTE PAGE</h1>\r\n        <p>Your account: {this.state.account}</p>\r\n        <p>hi</p>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAE1BK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAC;IACd,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,SAAS,CAAC,CAAC;EAElB;EACA,MAAMA,SAASA,CAAA,EAAG;IAChB,MAAM;MAACC;IAAS,CAAC,GAAG,IAAI,CAACN,KAAK;IAC9B,MAAMO,MAAM,GAAG,MAAMD,SAAS,CAACE,OAAO,CAACC,eAAe,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC/D,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,MAAM,EAACK,CAAC,EAAE,EACxB;MACE,MAAMC,OAAO,GAAG,MAAMP,SAAS,CAACE,OAAO,CAACH,SAAS,CAACO,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;MAC3DC,UAAU,CAACG,IAAI,CAACD,OAAO,CAAC;IAE1B;IACA,IAAI,CAACE,QAAQ,CAAC;MAACb,WAAW,EAACS;IAAU,CAAC,CAAC;IACvCK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAACE,WAAW,CAAC;EACrC;EAEA,MAAME,kBAAkBA,CAAA,EAAG;IACzB,IAAI;MACF;MACA,IAAIc,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMC,IAAI,GAAG,IAAI1B,IAAI,CAACwB,MAAM,CAACC,QAAQ,CAAC;QACtC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,MAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAACT,QAAQ,CAAC;UAAEd,OAAO,EAAEqB,QAAQ,CAAC,CAAC;QAAE,CAAC,CAAC;QACvC,MAAMhB,SAAS,GAAG,IAAIc,IAAI,CAACG,GAAG,CAACE,QAAQ,CAACC,GAAG,EAAEC,OAAO,CAAC;QACrD,IAAI,CAACZ,QAAQ,CAAC;UAAET;QAAU,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLU,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;MAC/E;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF;EAEAC,MAAMA,CAAA,EAAG;IAEP,oBACEjC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBtC,OAAA;QAAAkC,QAAA,GAAG,gBAAc,EAAC,IAAI,CAAC9B,KAAK,CAACC,OAAO;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCtC,OAAA;QAAAkC,QAAA,EAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAEV;AACF;AAEA,eAAerC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}