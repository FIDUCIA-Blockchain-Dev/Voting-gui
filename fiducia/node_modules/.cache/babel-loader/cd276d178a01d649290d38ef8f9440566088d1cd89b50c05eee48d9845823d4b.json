{"ast":null,"code":"\"use strict\";\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => word << 32 - shift | word >>> shift;\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\r\n */\nfunction bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\r\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\r\n */\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => {};\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await (0, exports.nextTick)();\n    ts += diff;\n  }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\nexports.toBytes = toBytes;\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n  const hashC = message => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\r\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\r\n */\nfunction randomBytes() {\n  let bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n    return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;","map":{"version":3,"names":["crypto_1","require","u8","arr","Uint8Array","buffer","byteOffset","byteLength","exports","u32","Uint32Array","Math","floor","createView","DataView","rotr","word","shift","isLE","Error","hexes","Array","from","length","v","i","toString","padStart","bytesToHex","uint8a","hex","hexToBytes","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","str","TextEncoder","encode","toBytes","data","concatBytes","_len","arguments","arrays","_key","every","a","reduce","result","pad","set","Hash","clone","_cloneInto","isPlainObject","obj","Object","prototype","call","constructor","checkOpts","defaults","opts","undefined","merged","assign","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","wrapConstructorWithOpts","hashCons","msg","randomBytes","bytesLength","crypto","getRandomValues"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\@noble\\hashes\\src\\utils.ts"],"sourcesContent":["/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\n\r\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\r\n// declare it in global scope. For node.js, package.json#exports field mapping\r\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\r\n// Makes the utils un-importable in browsers without a bundler.\r\n// Once node.js 18 is deprecated, we can just drop the import.\r\nimport { crypto } from '@noble/hashes/crypto';\r\n\r\n// prettier-ignore\r\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\r\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\r\n\r\n// Cast array to different type\r\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\r\nexport const u32 = (arr: TypedArray) =>\r\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\r\n\r\n// Cast array to view\r\nexport const createView = (arr: TypedArray) =>\r\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\r\n\r\n// The rotate right (circular right shift) operation for uint32\r\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\r\n\r\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\r\n// early-throw an error because we don't support BE yet.\r\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\r\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\r\n\r\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\r\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\r\n */\r\nexport function bytesToHex(uint8a: Uint8Array): string {\r\n  // pre-caching improves the speed 6x\r\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\r\n  let hex = '';\r\n  for (let i = 0; i < uint8a.length; i++) {\r\n    hex += hexes[uint8a[i]];\r\n  }\r\n  return hex;\r\n}\r\n\r\n/**\r\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\r\n */\r\nexport function hexToBytes(hex: string): Uint8Array {\r\n  if (typeof hex !== 'string') {\r\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\r\n  }\r\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\r\n  const array = new Uint8Array(hex.length / 2);\r\n  for (let i = 0; i < array.length; i++) {\r\n    const j = i * 2;\r\n    const hexByte = hex.slice(j, j + 2);\r\n    const byte = Number.parseInt(hexByte, 16);\r\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\r\n    array[i] = byte;\r\n  }\r\n  return array;\r\n}\r\n\r\n// There is no setImmediate in browser and setTimeout is slow.\r\n// call of async fn will return Promise, which will be fullfiled only on\r\n// next scheduler queue processing step and this is exactly what we need.\r\nexport const nextTick = async () => {};\r\n\r\n// Returns control to thread each 'tick' ms to avoid blocking\r\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\r\n  let ts = Date.now();\r\n  for (let i = 0; i < iters; i++) {\r\n    cb(i);\r\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\r\n    const diff = Date.now() - ts;\r\n    if (diff >= 0 && diff < tick) continue;\r\n    await nextTick();\r\n    ts += diff;\r\n  }\r\n}\r\n\r\n// Global symbols in both browsers and Node.js since v11\r\n// See https://github.com/microsoft/TypeScript/issues/31535\r\ndeclare const TextEncoder: any;\r\ndeclare const TextDecoder: any;\r\n\r\nexport function utf8ToBytes(str: string): Uint8Array {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\r\n  }\r\n  return new TextEncoder().encode(str);\r\n}\r\n\r\nexport type Input = Uint8Array | string;\r\nexport function toBytes(data: Input): Uint8Array {\r\n  if (typeof data === 'string') data = utf8ToBytes(data);\r\n  if (!(data instanceof Uint8Array))\r\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\r\n  return data;\r\n}\r\n\r\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\r\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\r\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\r\n  if (arrays.length === 1) return arrays[0];\r\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\r\n  const result = new Uint8Array(length);\r\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\r\n    const arr = arrays[i];\r\n    result.set(arr, pad);\r\n    pad += arr.length;\r\n  }\r\n  return result;\r\n}\r\n\r\n// For runtime check if class implements interface\r\nexport abstract class Hash<T extends Hash<T>> {\r\n  abstract blockLen: number; // Bytes per block\r\n  abstract outputLen: number; // Bytes in output\r\n  abstract update(buf: Input): this;\r\n  // Writes digest into buf\r\n  abstract digestInto(buf: Uint8Array): void;\r\n  abstract digest(): Uint8Array;\r\n  /**\r\n   * Resets internal state. Makes Hash instance unusable.\r\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\r\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\r\n   */\r\n  abstract destroy(): void;\r\n  /**\r\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\r\n   * when no options are passed.\r\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\r\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\r\n   * There are no guarantees for clean-up because it's impossible in JS.\r\n   */\r\n  abstract _cloneInto(to?: T): T;\r\n  // Safe version that clones internal state\r\n  clone(): T {\r\n    return this._cloneInto();\r\n  }\r\n}\r\n\r\n/**\r\n * XOF: streaming API to read digest in chunks.\r\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\r\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\r\n * destroy state, next call can require more bytes.\r\n */\r\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\r\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\r\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\r\n};\r\n\r\n// Check if object doens't have custom constructor (like Uint8Array/Array)\r\nconst isPlainObject = (obj: any) =>\r\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\r\n\r\ntype EmptyObj = {};\r\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\r\n  defaults: T1,\r\n  opts?: T2\r\n): T1 & T2 {\r\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\r\n    throw new TypeError('Options should be object or undefined');\r\n  const merged = Object.assign(defaults, opts);\r\n  return merged as T1 & T2;\r\n}\r\n\r\nexport type CHash = ReturnType<typeof wrapConstructor>;\r\n\r\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\r\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\r\n  const tmp = hashConstructor();\r\n  hashC.outputLen = tmp.outputLen;\r\n  hashC.blockLen = tmp.blockLen;\r\n  hashC.create = () => hashConstructor();\r\n  return hashC;\r\n}\r\n\r\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\r\n  hashCons: (opts?: T) => Hash<H>\r\n) {\r\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\r\n  const tmp = hashCons({} as T);\r\n  hashC.outputLen = tmp.outputLen;\r\n  hashC.blockLen = tmp.blockLen;\r\n  hashC.create = (opts: T) => hashCons(opts);\r\n  return hashC;\r\n}\r\n\r\n/**\r\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\r\n */\r\nexport function randomBytes(bytesLength = 32): Uint8Array {\r\n  if (crypto && typeof crypto.getRandomValues === 'function') {\r\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\r\n  }\r\n  throw new Error('crypto.getRandomValues must be defined');\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}