{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar _a;\nimport { OperationTimeoutError } from 'web3-errors';\n/**\r\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\r\n * which can be useful when dealing with asynchronous tasks.\r\n *\r\n */\nexport class Web3DeferredPromise {\n  /**\r\n   *\r\n   * @param timeout - (optional) The timeout in milliseconds.\r\n   * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\r\n   * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\r\n   */\n  constructor() {\n    let {\n      timeout,\n      eagerStart,\n      timeoutMessage\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      timeout: 0,\n      eagerStart: false,\n      timeoutMessage: 'DeferredPromise timed out'\n    };\n    // public tag to treat object as promise by different libs\n    // eslint-disable-next-line @typescript-eslint/prefer-as-const\n    this[_a] = 'Promise';\n    this._state = 'pending';\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this._timeoutMessage = timeoutMessage;\n    this._timeoutInterval = timeout;\n    if (eagerStart) {\n      this.startTimer();\n    }\n  }\n  /**\r\n   * Returns the current state of the promise.\r\n   * @returns 'pending' | 'fulfilled' | 'rejected'\r\n   */\n  get state() {\n    return this._state;\n  }\n  /**\r\n   *\r\n   * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\r\n   * @param onrejected  - (optional) The callback to execute when the promise is rejected.\r\n   * @returns\r\n   */\n  then(onfulfilled, onrejected) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._promise.then(onfulfilled, onrejected);\n    });\n  }\n  /**\r\n   *\r\n   * @param onrejected - (optional) The callback to execute when the promise is rejected.\r\n   * @returns\r\n   */\n  catch(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onrejected) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._promise.catch(onrejected);\n    });\n  }\n  /**\r\n   *\r\n   * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\r\n   * @returns\r\n   */\n  finally(onfinally) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._promise.finally(onfinally);\n    });\n  }\n  /**\r\n   * Resolves the current promise.\r\n   * @param value - The value to resolve the promise with.\r\n   */\n  resolve(value) {\n    this._resolve(value);\n    this._state = 'fulfilled';\n    this._clearTimeout();\n  }\n  /**\r\n   * Rejects the current promise.\r\n   * @param reason - The reason to reject the promise with.\r\n   */\n  reject(reason) {\n    this._reject(reason);\n    this._state = 'rejected';\n    this._clearTimeout();\n  }\n  /**\r\n   * Starts the timeout timer for the promise.\r\n   */\n  startTimer() {\n    if (this._timeoutInterval && this._timeoutInterval > 0) {\n      this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n    }\n  }\n  _checkTimeout() {\n    if (this._state === 'pending' && this._timeoutId) {\n      this.reject(new OperationTimeoutError(this._timeoutMessage));\n    }\n  }\n  _clearTimeout() {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n}\n_a = Symbol.toStringTag;","map":{"version":3,"names":["OperationTimeoutError","Web3DeferredPromise","constructor","timeout","eagerStart","timeoutMessage","arguments","length","undefined","_a","_state","_promise","Promise","resolve","reject","_resolve","_reject","_timeoutMessage","_timeoutInterval","startTimer","state","then","onfulfilled","onrejected","catch","finally","onfinally","value","_clearTimeout","reason","_timeoutId","setTimeout","_checkTimeout","bind","clearTimeout","Symbol","toStringTag"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-utils\\src\\web3_deferred_promise.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { OperationTimeoutError } from 'web3-errors';\r\nimport { Web3DeferredPromiseInterface } from 'web3-types';\r\n\r\n/**\r\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\r\n * which can be useful when dealing with asynchronous tasks.\r\n *\r\n */\r\nexport class Web3DeferredPromise<T> implements Promise<T>, Web3DeferredPromiseInterface<T> {\r\n\t// public tag to treat object as promise by different libs\r\n\t// eslint-disable-next-line @typescript-eslint/prefer-as-const\r\n\tpublic [Symbol.toStringTag]: 'Promise' = 'Promise';\r\n\r\n\tprivate readonly _promise: Promise<T>;\r\n\tprivate _resolve!: (value: T | PromiseLike<T>) => void;\r\n\tprivate _reject!: (reason?: unknown) => void;\r\n\tprivate _state: 'pending' | 'fulfilled' | 'rejected' = 'pending';\r\n\tprivate _timeoutId?: NodeJS.Timeout;\r\n\tprivate readonly _timeoutInterval?: number;\r\n\tprivate readonly _timeoutMessage: string;\r\n\r\n\t/**\r\n\t *\r\n\t * @param timeout - (optional) The timeout in milliseconds.\r\n\t * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\r\n\t * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\r\n\t */\r\n\tpublic constructor(\r\n\t\t{\r\n\t\t\ttimeout,\r\n\t\t\teagerStart,\r\n\t\t\ttimeoutMessage,\r\n\t\t}: { timeout: number; eagerStart: boolean; timeoutMessage: string } = {\r\n\t\t\ttimeout: 0,\r\n\t\t\teagerStart: false,\r\n\t\t\ttimeoutMessage: 'DeferredPromise timed out',\r\n\t\t},\r\n\t) {\r\n\t\tthis._promise = new Promise<T>((resolve, reject) => {\r\n\t\t\tthis._resolve = resolve;\r\n\t\t\tthis._reject = reject;\r\n\t\t});\r\n\r\n\t\tthis._timeoutMessage = timeoutMessage;\r\n\t\tthis._timeoutInterval = timeout;\r\n\r\n\t\tif (eagerStart) {\r\n\t\t\tthis.startTimer();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns the current state of the promise.\r\n\t * @returns 'pending' | 'fulfilled' | 'rejected'\r\n\t */\r\n\tpublic get state(): 'pending' | 'fulfilled' | 'rejected' {\r\n\t\treturn this._state;\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\r\n\t * @param onrejected  - (optional) The callback to execute when the promise is rejected.\r\n\t * @returns\r\n\t */\r\n\tpublic async then<TResult1, TResult2>(\r\n\t\tonfulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\r\n\t\tonrejected?: (reason: unknown) => TResult2 | PromiseLike<TResult2>,\r\n\t): Promise<TResult1 | TResult2> {\r\n\t\treturn this._promise.then(onfulfilled, onrejected);\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param onrejected - (optional) The callback to execute when the promise is rejected.\r\n\t * @returns\r\n\t */\r\n\tpublic async catch<TResult>(\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\t\tonrejected?: (reason: any) => TResult | PromiseLike<TResult>,\r\n\t): Promise<T | TResult> {\r\n\t\treturn this._promise.catch(onrejected);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\r\n\t * @returns\r\n\t */\r\n\tpublic async finally(onfinally?: (() => void) | undefined): Promise<T> {\r\n\t\treturn this._promise.finally(onfinally);\r\n\t}\r\n\r\n\t/**\r\n\t * Resolves the current promise.\r\n\t * @param value - The value to resolve the promise with.\r\n\t */\r\n\tpublic resolve(value: T | PromiseLike<T>): void {\r\n\t\tthis._resolve(value);\r\n\t\tthis._state = 'fulfilled';\r\n\t\tthis._clearTimeout();\r\n\t}\r\n\r\n\t/**\r\n\t * Rejects the current promise.\r\n\t * @param reason - The reason to reject the promise with.\r\n\t */\r\n\tpublic reject(reason?: unknown): void {\r\n\t\tthis._reject(reason);\r\n\t\tthis._state = 'rejected';\r\n\t\tthis._clearTimeout();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the timeout timer for the promise.\r\n\t */\r\n\tpublic startTimer() {\r\n\t\tif (this._timeoutInterval && this._timeoutInterval > 0) {\r\n\t\t\tthis._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _checkTimeout() {\r\n\t\tif (this._state === 'pending' && this._timeoutId) {\r\n\t\t\tthis.reject(new OperationTimeoutError(this._timeoutMessage));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _clearTimeout() {\r\n\t\tif (this._timeoutId) {\r\n\t\t\tclearTimeout(this._timeoutId);\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,qBAAqB,QAAQ,aAAa;AAGnD;;;;;AAKA,OAAM,MAAOC,mBAAmB;EAa/B;;;;;;EAMAC,YAAA,EASE;IAAA,IARD;MACCC,OAAO;MACPC,UAAU;MACVC;IAAc,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MACuD;MACrEH,OAAO,EAAE,CAAC;MACVC,UAAU,EAAE,KAAK;MACjBC,cAAc,EAAE;KAChB;IA3BF;IACA;IACO,KAAAI,EAAA,CAAoB,GAAc,SAAS;IAK1C,KAAAC,MAAM,GAAyC,SAAS;IAsB/D,IAAI,CAACC,QAAQ,GAAG,IAAIC,OAAO,CAAI,CAACC,OAAO,EAAEC,MAAM,KAAI;MAClD,IAAI,CAACC,QAAQ,GAAGF,OAAO;MACvB,IAAI,CAACG,OAAO,GAAGF,MAAM;IACtB,CAAC,CAAC;IAEF,IAAI,CAACG,eAAe,GAAGZ,cAAc;IACrC,IAAI,CAACa,gBAAgB,GAAGf,OAAO;IAE/B,IAAIC,UAAU,EAAE;MACf,IAAI,CAACe,UAAU,EAAE;;EAEnB;EACA;;;;EAIA,IAAWC,KAAKA,CAAA;IACf,OAAO,IAAI,CAACV,MAAM;EACnB;EACA;;;;;;EAMaW,IAAIA,CAChBC,WAA4D,EAC5DC,UAAkE;;MAElE,OAAO,IAAI,CAACZ,QAAQ,CAACU,IAAI,CAACC,WAAW,EAAEC,UAAU,CAAC;IACnD,CAAC;;EACD;;;;;EAKaC,KAAKA;EACjB;EACAD,UAA4D;;MAE5D,OAAO,IAAI,CAACZ,QAAQ,CAACa,KAAK,CAACD,UAAU,CAAC;IACvC,CAAC;;EAED;;;;;EAKaE,OAAOA,CAACC,SAAoC;;MACxD,OAAO,IAAI,CAACf,QAAQ,CAACc,OAAO,CAACC,SAAS,CAAC;IACxC,CAAC;;EAED;;;;EAIOb,OAAOA,CAACc,KAAyB;IACvC,IAAI,CAACZ,QAAQ,CAACY,KAAK,CAAC;IACpB,IAAI,CAACjB,MAAM,GAAG,WAAW;IACzB,IAAI,CAACkB,aAAa,EAAE;EACrB;EAEA;;;;EAIOd,MAAMA,CAACe,MAAgB;IAC7B,IAAI,CAACb,OAAO,CAACa,MAAM,CAAC;IACpB,IAAI,CAACnB,MAAM,GAAG,UAAU;IACxB,IAAI,CAACkB,aAAa,EAAE;EACrB;EAEA;;;EAGOT,UAAUA,CAAA;IAChB,IAAI,IAAI,CAACD,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,GAAG,CAAC,EAAE;MACvD,IAAI,CAACY,UAAU,GAAGC,UAAU,CAAC,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAACf,gBAAgB,CAAC;;EAEpF;EAEQc,aAAaA,CAAA;IACpB,IAAI,IAAI,CAACtB,MAAM,KAAK,SAAS,IAAI,IAAI,CAACoB,UAAU,EAAE;MACjD,IAAI,CAAChB,MAAM,CAAC,IAAId,qBAAqB,CAAC,IAAI,CAACiB,eAAe,CAAC,CAAC;;EAE9D;EAEQW,aAAaA,CAAA;IACpB,IAAI,IAAI,CAACE,UAAU,EAAE;MACpBI,YAAY,CAAC,IAAI,CAACJ,UAAU,CAAC;;EAE/B;;KAtHQK,MAAM,CAACC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}