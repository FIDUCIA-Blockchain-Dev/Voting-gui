{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nimport { Web3BaseProvider } from 'web3-types';\nexport const isWeb3Provider = provider => Web3BaseProvider.isWeb3Provider(provider);\nexport const isLegacyRequestProvider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'Function';\nexport const isEIP1193Provider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'AsyncFunction';\nexport const isLegacySendProvider = provider => typeof provider !== 'string' && 'send' in provider;\nexport const isLegacySendAsyncProvider = provider => typeof provider !== 'string' && 'sendAsync' in provider;\nexport const isSupportedProvider = provider => isWeb3Provider(provider) || isEIP1193Provider(provider) || isLegacyRequestProvider(provider) || isLegacySendAsyncProvider(provider) || isLegacySendProvider(provider);\nexport const isSupportSubscriptions = provider => {\n  if (isWeb3Provider(provider)) {\n    return provider.supportsSubscriptions();\n  }\n  if (typeof provider !== 'string' && 'on' in provider) {\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["Web3BaseProvider","isWeb3Provider","provider","isLegacyRequestProvider","request","constructor","name","isEIP1193Provider","isLegacySendProvider","isLegacySendAsyncProvider","isSupportedProvider","isSupportSubscriptions","supportsSubscriptions"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-core\\src\\utils.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport {\r\n\tEIP1193Provider,\r\n\tLegacyRequestProvider,\r\n\tLegacySendAsyncProvider,\r\n\tLegacySendProvider,\r\n\tSupportedProviders,\r\n\tWeb3APISpec,\r\n\tWeb3BaseProvider,\r\n} from 'web3-types';\r\n\r\nexport const isWeb3Provider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is Web3BaseProvider<API> => Web3BaseProvider.isWeb3Provider(provider);\r\n\r\nexport const isLegacyRequestProvider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is LegacyRequestProvider =>\r\n\ttypeof provider !== 'string' &&\r\n\t'request' in provider &&\r\n\tprovider.request.constructor.name === 'Function';\r\n\r\nexport const isEIP1193Provider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is EIP1193Provider<API> =>\r\n\ttypeof provider !== 'string' &&\r\n\t'request' in provider &&\r\n\tprovider.request.constructor.name === 'AsyncFunction';\r\n\r\nexport const isLegacySendProvider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is LegacySendProvider => typeof provider !== 'string' && 'send' in provider;\r\n\r\nexport const isLegacySendAsyncProvider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is LegacySendAsyncProvider => typeof provider !== 'string' && 'sendAsync' in provider;\r\n\r\nexport const isSupportedProvider = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): provider is SupportedProviders<API> =>\r\n\tisWeb3Provider(provider) ||\r\n\tisEIP1193Provider(provider) ||\r\n\tisLegacyRequestProvider(provider) ||\r\n\tisLegacySendAsyncProvider(provider) ||\r\n\tisLegacySendProvider(provider);\r\n\r\nexport const isSupportSubscriptions = <API extends Web3APISpec>(\r\n\tprovider: SupportedProviders<API>,\r\n): boolean => {\r\n\tif (isWeb3Provider<API>(provider)) {\r\n\t\treturn provider.supportsSubscriptions();\r\n\t}\r\n\r\n\tif (typeof provider !== 'string' && 'on' in provider) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAOCA,gBAAgB,QACV,YAAY;AAEnB,OAAO,MAAMC,cAAc,GAC1BC,QAAiC,IACMF,gBAAgB,CAACC,cAAc,CAACC,QAAQ,CAAC;AAEjF,OAAO,MAAMC,uBAAuB,GACnCD,QAAiC,IAEjC,OAAOA,QAAQ,KAAK,QAAQ,IAC5B,SAAS,IAAIA,QAAQ,IACrBA,QAAQ,CAACE,OAAO,CAACC,WAAW,CAACC,IAAI,KAAK,UAAU;AAEjD,OAAO,MAAMC,iBAAiB,GAC7BL,QAAiC,IAEjC,OAAOA,QAAQ,KAAK,QAAQ,IAC5B,SAAS,IAAIA,QAAQ,IACrBA,QAAQ,CAACE,OAAO,CAACC,WAAW,CAACC,IAAI,KAAK,eAAe;AAEtD,OAAO,MAAME,oBAAoB,GAChCN,QAAiC,IACG,OAAOA,QAAQ,KAAK,QAAQ,IAAI,MAAM,IAAIA,QAAQ;AAEvF,OAAO,MAAMO,yBAAyB,GACrCP,QAAiC,IACQ,OAAOA,QAAQ,KAAK,QAAQ,IAAI,WAAW,IAAIA,QAAQ;AAEjG,OAAO,MAAMQ,mBAAmB,GAC/BR,QAAiC,IAEjCD,cAAc,CAACC,QAAQ,CAAC,IACxBK,iBAAiB,CAACL,QAAQ,CAAC,IAC3BC,uBAAuB,CAACD,QAAQ,CAAC,IACjCO,yBAAyB,CAACP,QAAQ,CAAC,IACnCM,oBAAoB,CAACN,QAAQ,CAAC;AAE/B,OAAO,MAAMS,sBAAsB,GAClCT,QAAiC,IACrB;EACZ,IAAID,cAAc,CAAMC,QAAQ,CAAC,EAAE;IAClC,OAAOA,QAAQ,CAACU,qBAAqB,EAAE;;EAGxC,IAAI,OAAOV,QAAQ,KAAK,QAAQ,IAAI,IAAI,IAAIA,QAAQ,EAAE;IACrD,OAAO,IAAI;;EAGZ,OAAO,KAAK;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}