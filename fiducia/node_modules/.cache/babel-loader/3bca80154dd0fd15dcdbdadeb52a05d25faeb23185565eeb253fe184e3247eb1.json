{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/programming/FIDUCIA/fiducia/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { ABI, address } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      chairperson: ''\n    };\n  }\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n  async loadBlockchainData() {\n    try {\n      // Check if Web3 provider is available from Metamask or similar extension\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable(); // Request user permission to connect\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        const scontract = new web3.eth.Contract(ABI, address);\n        this.setState({\n          scontract\n        });\n      } else {\n        console.log('Please install MetaMask or use a compatible browser extension.');\n      }\n    } catch (error) {\n      console.error('Error loading blockchain data:', error);\n    }\n  }\n  async chairperson_or_voter() {\n    const {\n      scontract\n    } = this.state;\n    const chair = scontract.methods.chairperson().call();\n    this.setState({\n      chairperson: chair\n    });\n  }\n  render() {\n    const chairperson = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chairperson:\", chairperson]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Web3","ABI","address","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","state","account","chairperson","componentDidMount","loadBlockchainData","window","ethereum","web3","enable","accounts","eth","getAccounts","setState","scontract","Contract","console","log","error","chairperson_or_voter","chair","methods","call","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/vboxuser/programming/FIDUCIA/fiducia/src/components/Main.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ABI,address} from './config.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      chairperson:''\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    try {\n      // Check if Web3 provider is available from Metamask or similar extension\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.enable(); // Request user permission to connect\n        const accounts = await web3.eth.getAccounts();\n        this.setState({ account: accounts[0] });\n        const scontract = new web3.eth.Contract(ABI,address);\n        this.setState({scontract});\n      } else {\n        console.log('Please install MetaMask or use a compatible browser extension.');\n      }\n    } catch (error) {\n      console.error('Error loading blockchain data:', error);\n    }\n  }\n\n  async chairperson_or_voter(){\n    const {scontract} = this.state;\n    const chair = scontract.methods.chairperson().call();\n    this.setState({chairperson:chair});\n  }\n\n  render() {\n    const chairperson = this.state;\n    return (\n     <>\n     <p>Chairperson:{chairperson}</p>\n     </>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAO,WAAW;AAClB,SAAQC,GAAG,EAACC,OAAO,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,SAASR,SAAS,CAAC;EAC1BS,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAC;IACd,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B;EAEA,MAAMA,kBAAkBA,CAAA,EAAG;IACzB,IAAI;MACF;MACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMC,IAAI,GAAG,IAAIjB,IAAI,CAACe,MAAM,CAACC,QAAQ,CAAC;QACtC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,MAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAACC,QAAQ,CAAC;UAAEX,OAAO,EAAEQ,QAAQ,CAAC,CAAC;QAAE,CAAC,CAAC;QACvC,MAAMI,SAAS,GAAG,IAAIN,IAAI,CAACG,GAAG,CAACI,QAAQ,CAACvB,GAAG,EAACC,OAAO,CAAC;QACpD,IAAI,CAACoB,QAAQ,CAAC;UAACC;QAAS,CAAC,CAAC;MAC5B,CAAC,MAAM;QACLE,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;MAC/E;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF;EAEA,MAAMC,oBAAoBA,CAAA,EAAE;IAC1B,MAAM;MAACL;IAAS,CAAC,GAAG,IAAI,CAACb,KAAK;IAC9B,MAAMmB,KAAK,GAAGN,SAAS,CAACO,OAAO,CAAClB,WAAW,CAAC,CAAC,CAACmB,IAAI,CAAC,CAAC;IACpD,IAAI,CAACT,QAAQ,CAAC;MAACV,WAAW,EAACiB;IAAK,CAAC,CAAC;EACpC;EAEAG,MAAMA,CAAA,EAAG;IACP,MAAMpB,WAAW,GAAG,IAAI,CAACF,KAAK;IAC9B,oBACCN,OAAA,CAAAE,SAAA;MAAA2B,QAAA,eACA7B,OAAA;QAAA6B,QAAA,GAAG,cAAY,EAACrB,WAAW;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAC9B,CAAC;EAEN;AACF;AAEA,eAAe9B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}