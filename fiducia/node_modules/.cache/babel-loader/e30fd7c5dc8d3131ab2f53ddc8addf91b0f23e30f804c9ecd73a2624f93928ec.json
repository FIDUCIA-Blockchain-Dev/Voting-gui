{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n/**\r\n * The web3-net package allows you to interact with an Ethereum node’s network properties.\r\n *\r\n * ```ts\r\n * import Net from 'web3-net';\r\n *\r\n * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n * // or using the web3 umbrella package\r\n * import Web3 from 'web3';\r\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n *\r\n * // -> web3.eth.net\r\n *\r\n * // get the ID of the network\r\n * await web3.eth.net.getId();\r\n * > 5777n\r\n *\r\n * // get the peer count\r\n * await web3.eth.net.getPeerCount();\r\n * > 0n\r\n *\r\n * // Check if the node is listening for peers\r\n * await web3.eth.net.isListening();\r\n * > true\r\n * ```\r\n */\n/**\r\n *\r\n */\nimport { Net } from './net.js';\nexport * from './net.js';\nexport * from './rpc_method_wrappers.js';\nexport default Net;","map":{"version":3,"names":["Net"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-net\\src\\index.ts"],"sourcesContent":["﻿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n/**\r\n * The web3-net package allows you to interact with an Ethereum node’s network properties.\r\n *\r\n * ```ts\r\n * import Net from 'web3-net';\r\n *\r\n * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n * // or using the web3 umbrella package\r\n * import Web3 from 'web3';\r\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\r\n *\r\n * // -> web3.eth.net\r\n *\r\n * // get the ID of the network\r\n * await web3.eth.net.getId();\r\n * > 5777n\r\n *\r\n * // get the peer count\r\n * await web3.eth.net.getPeerCount();\r\n * > 0n\r\n *\r\n * // Check if the node is listening for peers\r\n * await web3.eth.net.isListening();\r\n * > true\r\n * ```\r\n */\r\n\r\n/**\r\n *\r\n */\r\nimport { Net } from './net.js';\r\n\r\nexport * from './net.js';\r\nexport * from './rpc_method_wrappers.js';\r\n\r\nexport default Net;\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;AAGA,SAASA,GAAG,QAAQ,UAAU;AAE9B,cAAc,UAAU;AACxB,cAAc,0BAA0B;AAExC,eAAeA,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}