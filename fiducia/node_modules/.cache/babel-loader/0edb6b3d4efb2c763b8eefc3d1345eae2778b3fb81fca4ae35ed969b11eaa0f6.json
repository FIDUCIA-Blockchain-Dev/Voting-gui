{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nimport { getRandomBytesSync } from 'ethereum-cryptography/random.js';\nimport { bytesToHex } from './converters.js';\n/**\r\n * Returns a random byte array by the given bytes size\r\n * @param size - The size of the random byte array returned\r\n * @returns - random byte array\r\n *\r\n * @example\r\n * ```ts\r\n * console.log(web3.utils.randomBytes(32));\r\n * > Uint8Array(32) [\r\n *       93, 172, 226,  32,  33, 176, 156, 156,\r\n *       182,  30, 240,   2,  69,  96, 174, 197,\r\n *       33, 136, 194, 241, 197, 156, 110, 111,\r\n *       66,  87,  17,  88,  67,  48, 245, 183\r\n *    ]\r\n * ```\r\n */\nexport const randomBytes = size => getRandomBytesSync(size);\n/**\r\n * Returns a random hex string by the given bytes size\r\n * @param byteSize - The size of the random hex string returned\r\n * @returns - random hex string\r\n *\r\n * ```ts\r\n * console.log(web3.utils.randomHex(32));\r\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\r\n * ```\r\n */\nexport const randomHex = byteSize => bytesToHex(randomBytes(byteSize));","map":{"version":3,"names":["getRandomBytesSync","bytesToHex","randomBytes","size","randomHex","byteSize"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-utils\\src\\random.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { getRandomBytesSync } from 'ethereum-cryptography/random.js';\r\nimport { bytesToHex } from './converters.js';\r\n\r\n/**\r\n * Returns a random byte array by the given bytes size\r\n * @param size - The size of the random byte array returned\r\n * @returns - random byte array\r\n *\r\n * @example\r\n * ```ts\r\n * console.log(web3.utils.randomBytes(32));\r\n * > Uint8Array(32) [\r\n *       93, 172, 226,  32,  33, 176, 156, 156,\r\n *       182,  30, 240,   2,  69,  96, 174, 197,\r\n *       33, 136, 194, 241, 197, 156, 110, 111,\r\n *       66,  87,  17,  88,  67,  48, 245, 183\r\n *    ]\r\n * ```\r\n */\r\nexport const randomBytes = (size: number): Uint8Array => getRandomBytesSync(size);\r\n\r\n/**\r\n * Returns a random hex string by the given bytes size\r\n * @param byteSize - The size of the random hex string returned\r\n * @returns - random hex string\r\n *\r\n * ```ts\r\n * console.log(web3.utils.randomHex(32));\r\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\r\n * ```\r\n */\r\nexport const randomHex = (byteSize: number): string => bytesToHex(randomBytes(byteSize));\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAASA,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,UAAU,QAAQ,iBAAiB;AAE5C;;;;;;;;;;;;;;;;AAgBA,OAAO,MAAMC,WAAW,GAAIC,IAAY,IAAiBH,kBAAkB,CAACG,IAAI,CAAC;AAEjF;;;;;;;;;;AAUA,OAAO,MAAMC,SAAS,GAAIC,QAAgB,IAAaJ,UAAU,CAACC,WAAW,CAACG,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}