{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isNullish } from 'web3-validator';\nimport { Eip1559NotSupportedError, UnsupportedTransactionTypeError } from 'web3-errors';\nimport { format } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { getBlock, getGasPrice } from '../rpc_method_wrappers.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionType } from './transaction_builder.js';\nfunction getEip1559GasPricing(transaction, web3Context, returnFormat) {\n  var _a, _b, _c;\n  return __awaiter(this, void 0, void 0, function* () {\n    const block = yield getBlock(web3Context, web3Context.defaultBlock, false, returnFormat);\n    if (isNullish(block.baseFeePerGas)) throw new Eip1559NotSupportedError();\n    if (!isNullish(transaction.gasPrice)) {\n      const convertedTransactionGasPrice = format({\n        format: 'uint'\n      }, transaction.gasPrice, returnFormat);\n      return {\n        maxPriorityFeePerGas: convertedTransactionGasPrice,\n        maxFeePerGas: convertedTransactionGasPrice\n      };\n    }\n    return {\n      maxPriorityFeePerGas: format({\n        format: 'uint'\n      }, (_a = transaction.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : web3Context.defaultMaxPriorityFeePerGas, returnFormat),\n      maxFeePerGas: format({\n        format: 'uint'\n      }, (_b = transaction.maxFeePerGas) !== null && _b !== void 0 ? _b : BigInt(block.baseFeePerGas) * BigInt(2) + BigInt((_c = transaction.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : web3Context.defaultMaxPriorityFeePerGas), returnFormat)\n    };\n  });\n}\nexport function getTransactionGasPricing(transaction, web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionType = getTransactionType(transaction, web3Context);\n    if (!isNullish(transactionType)) {\n      if (transactionType.startsWith('-')) throw new UnsupportedTransactionTypeError(transactionType);\n      // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n      if (transactionType < '0x0' || transactionType > '0x7f') throw new UnsupportedTransactionTypeError(transactionType);\n      if (isNullish(transaction.gasPrice) && (transactionType === '0x0' || transactionType === '0x1')) return {\n        gasPrice: yield getGasPrice(web3Context, returnFormat),\n        maxPriorityFeePerGas: undefined,\n        maxFeePerGas: undefined\n      };\n      if (transactionType === '0x2') {\n        return Object.assign({\n          gasPrice: undefined\n        }, yield getEip1559GasPricing(transaction, web3Context, returnFormat));\n      }\n    }\n    return undefined;\n  });\n}","map":{"version":3,"names":["isNullish","Eip1559NotSupportedError","UnsupportedTransactionTypeError","format","getBlock","getGasPrice","getTransactionType","getEip1559GasPricing","transaction","web3Context","returnFormat","block","defaultBlock","baseFeePerGas","gasPrice","convertedTransactionGasPrice","maxPriorityFeePerGas","maxFeePerGas","_a","defaultMaxPriorityFeePerGas","_b","BigInt","_c","getTransactionGasPricing","transactionType","startsWith","undefined","Object","assign"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-eth\\src\\utils\\get_transaction_gas_pricing.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { Web3Context } from 'web3-core';\r\nimport {\r\n\tEthExecutionAPI,\r\n\tNumbers,\r\n\tTransaction,\r\n\tDataFormat,\r\n\tFormatType,\r\n\tETH_DATA_FORMAT,\r\n} from 'web3-types';\r\nimport { isNullish } from 'web3-validator';\r\nimport { Eip1559NotSupportedError, UnsupportedTransactionTypeError } from 'web3-errors';\r\nimport { format } from 'web3-utils';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { getBlock, getGasPrice } from '../rpc_method_wrappers.js';\r\nimport { InternalTransaction } from '../types.js';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { getTransactionType } from './transaction_builder.js';\r\n\r\nasync function getEip1559GasPricing<ReturnFormat extends DataFormat>(\r\n\ttransaction: FormatType<Transaction, typeof ETH_DATA_FORMAT>,\r\n\tweb3Context: Web3Context<EthExecutionAPI>,\r\n\treturnFormat: ReturnFormat,\r\n): Promise<FormatType<{ maxPriorityFeePerGas?: Numbers; maxFeePerGas?: Numbers }, ReturnFormat>> {\r\n\tconst block = await getBlock(web3Context, web3Context.defaultBlock, false, returnFormat);\r\n\r\n\tif (isNullish(block.baseFeePerGas)) throw new Eip1559NotSupportedError();\r\n\r\n\tif (!isNullish(transaction.gasPrice)) {\r\n\t\tconst convertedTransactionGasPrice = format(\r\n\t\t\t{ format: 'uint' },\r\n\t\t\ttransaction.gasPrice as Numbers,\r\n\t\t\treturnFormat,\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tmaxPriorityFeePerGas: convertedTransactionGasPrice,\r\n\t\t\tmaxFeePerGas: convertedTransactionGasPrice,\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tmaxPriorityFeePerGas: format(\r\n\t\t\t{ format: 'uint' },\r\n\t\t\ttransaction.maxPriorityFeePerGas ?? web3Context.defaultMaxPriorityFeePerGas,\r\n\t\t\treturnFormat,\r\n\t\t),\r\n\t\tmaxFeePerGas: format(\r\n\t\t\t{ format: 'uint' },\r\n\t\t\t(transaction.maxFeePerGas ??\r\n\t\t\t\tBigInt(block.baseFeePerGas) * BigInt(2) +\r\n\t\t\t\t\tBigInt(\r\n\t\t\t\t\t\ttransaction.maxPriorityFeePerGas ?? web3Context.defaultMaxPriorityFeePerGas,\r\n\t\t\t\t\t)) as Numbers,\r\n\t\t\treturnFormat,\r\n\t\t),\r\n\t};\r\n}\r\n\r\nexport async function getTransactionGasPricing<ReturnFormat extends DataFormat>(\r\n\ttransaction: InternalTransaction,\r\n\tweb3Context: Web3Context<EthExecutionAPI>,\r\n\treturnFormat: ReturnFormat,\r\n): Promise<\r\n\t| FormatType<\r\n\t\t\t{ gasPrice?: Numbers; maxPriorityFeePerGas?: Numbers; maxFeePerGas?: Numbers },\r\n\t\t\tReturnFormat\r\n\t  >\r\n\t| undefined\r\n> {\r\n\tconst transactionType = getTransactionType(transaction, web3Context);\r\n\tif (!isNullish(transactionType)) {\r\n\t\tif (transactionType.startsWith('-'))\r\n\t\t\tthrow new UnsupportedTransactionTypeError(transactionType);\r\n\r\n\t\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\r\n\t\tif (transactionType < '0x0' || transactionType > '0x7f')\r\n\t\t\tthrow new UnsupportedTransactionTypeError(transactionType);\r\n\r\n\t\tif (\r\n\t\t\tisNullish(transaction.gasPrice) &&\r\n\t\t\t(transactionType === '0x0' || transactionType === '0x1')\r\n\t\t)\r\n\t\t\treturn {\r\n\t\t\t\tgasPrice: await getGasPrice(web3Context, returnFormat),\r\n\t\t\t\tmaxPriorityFeePerGas: undefined,\r\n\t\t\t\tmaxFeePerGas: undefined,\r\n\t\t\t};\r\n\r\n\t\tif (transactionType === '0x2') {\r\n\t\t\treturn {\r\n\t\t\t\tgasPrice: undefined,\r\n\t\t\t\t...(await getEip1559GasPricing(transaction, web3Context, returnFormat)),\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn undefined;\r\n}\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,wBAAwB,EAAEC,+BAA+B,QAAQ,aAAa;AACvF,SAASC,MAAM,QAAQ,YAAY;AACnC;AACA,SAASC,QAAQ,EAAEC,WAAW,QAAQ,2BAA2B;AAEjE;AACA,SAASC,kBAAkB,QAAQ,0BAA0B;AAE7D,SAAeC,oBAAoBA,CAClCC,WAA4D,EAC5DC,WAAyC,EACzCC,YAA0B;;;IAE1B,MAAMC,KAAK,GAAG,MAAMP,QAAQ,CAACK,WAAW,EAAEA,WAAW,CAACG,YAAY,EAAE,KAAK,EAAEF,YAAY,CAAC;IAExF,IAAIV,SAAS,CAACW,KAAK,CAACE,aAAa,CAAC,EAAE,MAAM,IAAIZ,wBAAwB,EAAE;IAExE,IAAI,CAACD,SAAS,CAACQ,WAAW,CAACM,QAAQ,CAAC,EAAE;MACrC,MAAMC,4BAA4B,GAAGZ,MAAM,CAC1C;QAAEA,MAAM,EAAE;MAAM,CAAE,EAClBK,WAAW,CAACM,QAAmB,EAC/BJ,YAAY,CACZ;MAED,OAAO;QACNM,oBAAoB,EAAED,4BAA4B;QAClDE,YAAY,EAAEF;OACd;;IAEF,OAAO;MACNC,oBAAoB,EAAEb,MAAM,CAC3B;QAAEA,MAAM,EAAE;MAAM,CAAE,EAClB,CAAAe,EAAA,GAAAV,WAAW,CAACQ,oBAAoB,cAAAE,EAAA,cAAAA,EAAA,GAAIT,WAAW,CAACU,2BAA2B,EAC3ET,YAAY,CACZ;MACDO,YAAY,EAAEd,MAAM,CACnB;QAAEA,MAAM,EAAE;MAAM,CAAE,EACjB,CAAAiB,EAAA,GAAAZ,WAAW,CAACS,YAAY,cAAAG,EAAA,cAAAA,EAAA,GACxBC,MAAM,CAACV,KAAK,CAACE,aAAa,CAAC,GAAGQ,MAAM,CAAC,CAAC,CAAC,GACtCA,MAAM,CACL,CAAAC,EAAA,GAAAd,WAAW,CAACQ,oBAAoB,cAAAM,EAAA,cAAAA,EAAA,GAAIb,WAAW,CAACU,2BAA2B,CAC3E,EACHT,YAAY;KAEb;;;AAGF,OAAM,SAAgBa,wBAAwBA,CAC7Cf,WAAgC,EAChCC,WAAyC,EACzCC,YAA0B;;IAQ1B,MAAMc,eAAe,GAAGlB,kBAAkB,CAACE,WAAW,EAAEC,WAAW,CAAC;IACpE,IAAI,CAACT,SAAS,CAACwB,eAAe,CAAC,EAAE;MAChC,IAAIA,eAAe,CAACC,UAAU,CAAC,GAAG,CAAC,EAClC,MAAM,IAAIvB,+BAA+B,CAACsB,eAAe,CAAC;MAE3D;MACA,IAAIA,eAAe,GAAG,KAAK,IAAIA,eAAe,GAAG,MAAM,EACtD,MAAM,IAAItB,+BAA+B,CAACsB,eAAe,CAAC;MAE3D,IACCxB,SAAS,CAACQ,WAAW,CAACM,QAAQ,CAAC,KAC9BU,eAAe,KAAK,KAAK,IAAIA,eAAe,KAAK,KAAK,CAAC,EAExD,OAAO;QACNV,QAAQ,EAAE,MAAMT,WAAW,CAACI,WAAW,EAAEC,YAAY,CAAC;QACtDM,oBAAoB,EAAEU,SAAS;QAC/BT,YAAY,EAAES;OACd;MAEF,IAAIF,eAAe,KAAK,KAAK,EAAE;QAC9B,OAAAG,MAAA,CAAAC,MAAA;UACCd,QAAQ,EAAEY;QAAS,GACf,MAAMnB,oBAAoB,CAACC,WAAW,EAAEC,WAAW,EAAEC,YAAY,CAAE;;;IAK1E,OAAOgB,SAAS;EACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}