{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nexport {};","map":{"version":3,"names":[],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-types\\src\\eth_contract_types.ts"],"sourcesContent":["/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { Address, Uint } from './eth_types.js';\r\nimport { SupportedProviders } from './web3_base_provider.js';\r\nimport { Bytes, HexString } from './primitives_types.js';\r\nimport { EthExecutionAPI } from './apis/eth_execution_api.js';\r\n\r\nexport interface ContractInitOptions {\r\n\t/**\r\n\t * The maximum gas provided for a transaction (gas limit).\r\n\t */\r\n\treadonly gas?: Uint;\r\n\treadonly gasLimit?: Uint;\r\n\t/**\r\n\t * The gas price in wei to use for transactions.\r\n\t */\r\n\treadonly gasPrice?: Uint;\r\n\t/**\r\n\t * The address transactions should be made from\r\n\t */\r\n\treadonly from?: Address;\r\n\t/**\r\n\t * The byte code of the contract. Used when the contract gets {@link Contract.deploy | deployed}\r\n\t */\r\n\treadonly data?: Bytes;\r\n\treadonly input?: Bytes;\r\n\r\n\treadonly provider?: SupportedProviders<EthExecutionAPI> | string;\r\n\t/**\r\n\t * If `true`, the defaults of the contract instance will be updated automatically based on the changes of the context used to instantiate the contract.\r\n\t */\r\n\treadonly syncWithContext?: boolean;\r\n}\r\n\r\nexport interface NonPayableCallOptions {\r\n\tnonce?: HexString;\r\n\t/**\r\n\t * The address which is the call (the transaction) should be made from. For calls the `from` property is optional however it is\r\n\t * highly recommended to explicitly set it or it may default to address(0) depending on your node or provider.\r\n\t */\r\n\tfrom?: Address;\r\n\t/**\r\n\t * The maximum gas (gas limit) provided for this call (this transaction)\r\n\t */\r\n\tgas?: string;\r\n\tmaxPriorityFeePerGas?: HexString;\r\n\tmaxFeePerGas?: HexString;\r\n\t/**\r\n\t * The gas price in wei to use for this call `transaction`.\r\n\t */\r\n\tgasPrice?: string;\r\n\ttype?: string | number;\r\n}\r\n\r\nexport interface PayableCallOptions extends NonPayableCallOptions {\r\n\t/**\r\n\t *\r\n\t */\r\n\tvalue?: string;\r\n}\r\n"],"mappings":"AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}