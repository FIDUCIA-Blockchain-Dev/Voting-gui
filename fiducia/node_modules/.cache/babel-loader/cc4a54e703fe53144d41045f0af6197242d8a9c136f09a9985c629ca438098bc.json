{"ast":null,"code":"/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\nimport { Web3Subscription } from 'web3-core';\n// eslint-disable-next-line import/no-cycle\nimport { decodeEventABI } from './encoding.js';\n/**\r\n * LogSubscription to be used to subscribe to events logs.\r\n *\r\n * Following events are supported and can be accessed with either {@link LogsSubscription.once} or ${@link LogsSubscription.on} methods.\r\n *\r\n * - **connected**: Emitted when the subscription is connected.\r\n * - **data**: Fires on each incoming event with the event object as argument.\r\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\r\n * - **error**: Fires on each error.\r\n *\r\n * ```ts\r\n * const subscription = await myContract.events.MyEvent({\r\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\r\n *   fromBlock: 0\r\n * });\r\n *\r\n * subscription.on(\"connected\", function(subscriptionId){\r\n *   console.log(subscriptionId);\r\n * });\r\n *\r\n * subscription.on('data', function(event){\r\n *   console.log(event); // same results as the optional callback above\r\n * });\r\n *\r\n * subscription.on('changed', function(event){\r\n *   // remove event from local database\r\n * })\r\n *\r\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n *   ...\r\n * });\r\n *\r\n * // event output example\r\n * > {\r\n *   returnValues: {\r\n *       myIndexedParam: 20,\r\n *       myOtherIndexedParam: '0x123456789...',\r\n *       myNonIndexParam: 'My String'\r\n *   },\r\n *   raw: {\r\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\r\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\r\n *   },\r\n *   event: 'MyEvent',\r\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\r\n *   logIndex: 0,\r\n *   transactionIndex: 0,\r\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\r\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\r\n *   blockNumber: 1234,\r\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\r\n * }\r\n * ```\r\n */\nexport class LogsSubscription extends Web3Subscription {\n  constructor(args, options) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    super(args, options);\n    this.address = args.address;\n    this.topics = args.topics;\n    this.abi = args.abi;\n    this.jsonInterface = args.jsonInterface;\n  }\n  _buildSubscriptionParams() {\n    return ['logs', {\n      address: this.address,\n      topics: this.topics\n    }];\n  }\n  _processSubscriptionResult(data) {\n    const decoded = decodeEventABI(this.abi, data, this.jsonInterface, super.returnFormat);\n    this.emit('data', decoded);\n  }\n}","map":{"version":3,"names":["Web3Subscription","decodeEventABI","LogsSubscription","constructor","args","options","address","topics","abi","jsonInterface","_buildSubscriptionParams","_processSubscriptionResult","data","decoded","returnFormat","emit"],"sources":["C:\\Users\\lakka\\OneDrive - Manipal Academy of Higher Education\\FIDUCIA\\voting-gui\\fiducia\\node_modules\\web3-eth-contract\\src\\log_subscription.ts"],"sourcesContent":["ï»¿/*\r\nThis file is part of web3.js.\r\n\r\nweb3.js is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nweb3.js is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License\r\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { AbiEventFragment, LogsInput, HexString, Topic, DataFormat } from 'web3-types';\r\nimport { Web3RequestManager, Web3Subscription, Web3SubscriptionManager } from 'web3-core';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { decodeEventABI } from './encoding.js';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { EventLog, ContractAbiWithSignature } from './types.js';\r\n\r\n/**\r\n * LogSubscription to be used to subscribe to events logs.\r\n *\r\n * Following events are supported and can be accessed with either {@link LogsSubscription.once} or ${@link LogsSubscription.on} methods.\r\n *\r\n * - **connected**: Emitted when the subscription is connected.\r\n * - **data**: Fires on each incoming event with the event object as argument.\r\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\r\n * - **error**: Fires on each error.\r\n *\r\n * ```ts\r\n * const subscription = await myContract.events.MyEvent({\r\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\r\n *   fromBlock: 0\r\n * });\r\n *\r\n * subscription.on(\"connected\", function(subscriptionId){\r\n *   console.log(subscriptionId);\r\n * });\r\n *\r\n * subscription.on('data', function(event){\r\n *   console.log(event); // same results as the optional callback above\r\n * });\r\n *\r\n * subscription.on('changed', function(event){\r\n *   // remove event from local database\r\n * })\r\n *\r\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\r\n *   ...\r\n * });\r\n *\r\n * // event output example\r\n * > {\r\n *   returnValues: {\r\n *       myIndexedParam: 20,\r\n *       myOtherIndexedParam: '0x123456789...',\r\n *       myNonIndexParam: 'My String'\r\n *   },\r\n *   raw: {\r\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\r\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\r\n *   },\r\n *   event: 'MyEvent',\r\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\r\n *   logIndex: 0,\r\n *   transactionIndex: 0,\r\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\r\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\r\n *   blockNumber: 1234,\r\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\r\n * }\r\n * ```\r\n */\r\nexport class LogsSubscription extends Web3Subscription<\r\n\t{\r\n\t\terror: Error;\r\n\t\tconnected: number;\r\n\t\tdata: EventLog;\r\n\t\tchanged: EventLog & { removed: true };\r\n\t},\r\n\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t{ address?: HexString; topics?: (Topic | Topic[] | null)[]; abi: AbiEventFragment }\r\n> {\r\n\t/**\r\n\t * Address of tye contract\r\n\t */\r\n\tpublic readonly address?: HexString;\r\n\r\n\t/**\r\n\t * The list of topics subscribed\r\n\t */\r\n\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\tpublic readonly topics?: (Topic | Topic[] | null)[];\r\n\r\n\t/**\r\n\t * The {@doclink glossary/json_interface | JSON Interface} of the event.\r\n\t */\r\n\tpublic readonly abi: AbiEventFragment & { signature: HexString };\r\n\r\n\tpublic readonly jsonInterface: ContractAbiWithSignature;\r\n\r\n\tpublic constructor(\r\n\t\targs: {\r\n\t\t\taddress?: HexString;\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t\t\ttopics?: (Topic | Topic[] | null)[];\r\n\t\t\tabi: AbiEventFragment & { signature: HexString };\r\n\t\t\tjsonInterface: ContractAbiWithSignature;\r\n\t\t},\r\n\t\toptions: { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\r\n\t);\r\n\t/**\r\n\t * @deprecated This constructor overloading should not be used\r\n\t */\r\n\tpublic constructor(\r\n\t\targs: {\r\n\t\t\taddress?: HexString;\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t\t\ttopics?: (Topic | Topic[] | null)[];\r\n\t\t\tabi: AbiEventFragment & { signature: HexString };\r\n\t\t\tjsonInterface: ContractAbiWithSignature;\r\n\t\t},\r\n\t\toptions: { requestManager: Web3RequestManager; returnFormat?: DataFormat },\r\n\t);\r\n\tpublic constructor(\r\n\t\targs: {\r\n\t\t\taddress?: HexString;\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t\t\ttopics?: (Topic | Topic[] | null)[];\r\n\t\t\tabi: AbiEventFragment & { signature: HexString };\r\n\t\t\tjsonInterface: ContractAbiWithSignature;\r\n\t\t},\r\n\t\toptions: (\r\n\t\t\t| { subscriptionManager: Web3SubscriptionManager }\r\n\t\t\t| { requestManager: Web3RequestManager }\r\n\t\t) & {\r\n\t\t\treturnFormat?: DataFormat;\r\n\t\t},\r\n\t) {\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n\t\tsuper(args, options as any);\r\n\r\n\t\tthis.address = args.address;\r\n\t\tthis.topics = args.topics;\r\n\t\tthis.abi = args.abi;\r\n\t\tthis.jsonInterface = args.jsonInterface;\r\n\t}\r\n\r\n\tprotected _buildSubscriptionParams() {\r\n\t\treturn ['logs', { address: this.address, topics: this.topics }] as [\r\n\t\t\t'logs',\r\n\t\t\t{ address?: string; topics?: string[] },\r\n\t\t];\r\n\t}\r\n\r\n\tprotected _processSubscriptionResult(data: LogsInput): void {\r\n\t\tconst decoded = decodeEventABI(this.abi, data, this.jsonInterface, super.returnFormat);\r\n\t\tthis.emit('data', decoded);\r\n\t}\r\n}\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAA6BA,gBAAgB,QAAiC,WAAW;AACzF;AACA,SAASC,cAAc,QAAQ,eAAe;AAI9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAM,MAAOC,gBAAiB,SAAQF,gBASrC;EA0CAG,YACCC,IAMC,EACDC,OAKC;IAED;IACA,KAAK,CAACD,IAAI,EAAEC,OAAc,CAAC;IAE3B,IAAI,CAACC,OAAO,GAAGF,IAAI,CAACE,OAAO;IAC3B,IAAI,CAACC,MAAM,GAAGH,IAAI,CAACG,MAAM;IACzB,IAAI,CAACC,GAAG,GAAGJ,IAAI,CAACI,GAAG;IACnB,IAAI,CAACC,aAAa,GAAGL,IAAI,CAACK,aAAa;EACxC;EAEUC,wBAAwBA,CAAA;IACjC,OAAO,CAAC,MAAM,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE,CAG7D;EACF;EAEUI,0BAA0BA,CAACC,IAAe;IACnD,MAAMC,OAAO,GAAGZ,cAAc,CAAC,IAAI,CAACO,GAAG,EAAEI,IAAI,EAAE,IAAI,CAACH,aAAa,EAAE,KAAK,CAACK,YAAY,CAAC;IACtF,IAAI,CAACC,IAAI,CAAC,MAAM,EAAEF,OAAO,CAAC;EAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}